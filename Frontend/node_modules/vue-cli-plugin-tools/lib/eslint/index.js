"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const eslintTransform = (config) => {
    return (file, api) => {
        const j = api.jscodeshift;
        const root = j(file.source);
        const identifier = api.j.Identifier;
        const literal = api.j.Literal;
        const extendsArray = root
            .find(api.j.Property, (node) => {
            const { key } = node;
            return ((identifier.check(key) && key.name === 'extends') ||
                (literal.check(key) && key.value === 'extends'));
        })
            .find(api.j.ArrayExpression);
        const extendNames = typeof config === 'string' ? new Set([config]) : new Set(config);
        extendsArray.find(literal).forEach(({ node }) => {
            const name = node.value;
            if (extendNames.has(name)) {
                extendNames.delete(name);
            }
        });
        const callExpressions = Array.from(extendNames).map((name) => {
            const callee = api.j.memberExpression(api.j.identifier('require'), api.j.identifier('resolve'));
            return api.j.callExpression(callee, [api.j.literal(name)]);
        });
        extendsArray.replaceWith(({ node }) => {
            const { elements } = node;
            elements.push(...callExpressions);
            return node;
        });
        return root.toSource();
    };
};
exports.default = eslintTransform;
