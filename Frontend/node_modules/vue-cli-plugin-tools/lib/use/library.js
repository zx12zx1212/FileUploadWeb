"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const codemod_1 = require("../utils/codemod");
function save(root, importLib, api, opts) {
    const { defaultImport, importName } = opts;
    const specifier = api.j.Specifier;
    const identifier = api.j.Identifier;
    const importSpecifier = api.j.ImportSpecifier;
    const importDefaultSpecifier = api.j.ImportDefaultSpecifier;
    importLib
        .find(specifier, (ast) => {
        const { local } = ast;
        return identifier.check(local) && importName === local.name;
    })
        .replaceWith((ast) => {
        if (defaultImport && importSpecifier.check(ast.value)) {
            return api.j.importDefaultSpecifier(api.j.identifier(importName));
        }
        if (!defaultImport && importDefaultSpecifier.check(ast.value)) {
            return api.j.importSpecifier(api.j.identifier(importName), api.j.identifier(importName));
        }
        return ast.value;
    });
    const imports = codemod_1.importStatement(false, opts);
    codemod_1.addImport(root, api, imports);
}
exports.default = (root, api, opts) => {
    const { libraryName, remove } = opts;
    const importLib = root.find(api.jscodeshift.ImportDeclaration, (ast) => {
        const { source } = ast;
        const stringLiteral = api.jscodeshift.StringLiteral;
        return stringLiteral.check(source) && libraryName === source.value;
    });
    if (remove) {
        importLib.remove();
    }
    else {
        save(root, importLib, api, opts);
    }
};
