{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlot } from '../_util/props-util';\nvar Record;\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n  function processNode(node) {\n    var key = node.key;\n    var children = getSlot(node);\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n  nodeList.forEach(processNode);\n}\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n    keyEntities = _convertTreeToEntitie.keyEntities;\n  return _toConsumableArray(keyEntities.keys());\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var replaceFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = [];\n  var _replaceFields$key = replaceFields.key,\n    key = _replaceFields$key === void 0 ? 'key' : _replaceFields$key,\n    _replaceFields$childr = replaceFields.children,\n    children = _replaceFields$childr === void 0 ? 'children' : _replaceFields$childr;\n  (treeData || []).forEach(function (item) {\n    keys.push(item[key]);\n    if (item[children]) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item[children], replaceFields)));\n    }\n  });\n  return keys;\n}","map":{"version":3,"names":["_toConsumableArray","getNodeChildren","convertTreeToEntities","getSlot","Record","traverseNodesKey","rootChildren","callback","nodeList","processNode","node","key","children","forEach","getFullKeyList","_convertTreeToEntitie","keyEntities","keys","calcRangeKeys","expandedKeys","startKey","endKey","record","None","matchKey","End","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","index","splice","length","getFullKeyListByTreeData","treeData","replaceFields","arguments","undefined","_replaceFields$key","_replaceFields$childr","item","concat"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/tree/util.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlot } from '../_util/props-util';\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key;\n    var children = getSlot(node);\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return _toConsumableArray(keyEntities.keys());\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var replaceFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = [];\n  var _replaceFields$key = replaceFields.key,\n      key = _replaceFields$key === void 0 ? 'key' : _replaceFields$key,\n      _replaceFields$childr = replaceFields.children,\n      children = _replaceFields$childr === void 0 ? 'children' : _replaceFields$childr;\n  (treeData || []).forEach(function (item) {\n    keys.push(item[key]);\n\n    if (item[children]) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item[children], replaceFields)));\n    }\n  });\n  return keys;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}