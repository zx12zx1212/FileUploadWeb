{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint no-loop-func: 0*/\n\nimport warning from 'warning';\nimport TreeNode from './TreeNode';\nimport { getOptionProps, getSlot } from '../../_util/props-util';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node.type && node.type.isTreeNode;\n}\nexport function getNodeChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return children.filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = getOptionProps(node) || {},\n    disabled = _ref.disabled,\n    disableCheckbox = _ref.disableCheckbox,\n    checkable = _ref.checkable;\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? getSlot(node) : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0; // Filter children\n\n    var childList = getNodeChildren(children); // Process node if is not root\n\n    if (node) {\n      var key = node.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    } // Process children node\n\n    childList.forEach(function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n  processNode(null);\n}\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\n\nexport function mapChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var func = arguments.length > 1 ? arguments[1] : undefined;\n  var list = children.map(func);\n  if (list.length === 1) {\n    return list[0];\n  }\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _getOptionProps = getOptionProps(node),\n    eventKey = _getOptionProps.eventKey,\n    pos = _getOptionProps.pos;\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n    top = _treeNode$selectHandl.top,\n    bottom = _treeNode$selectHandl.bottom,\n    height = _treeNode$selectHandl.height;\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n  if (clientY <= top + des) {\n    return -1;\n  }\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) {\n    return undefined;\n  }\n  var multiple = props.multiple;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n// function keyListToString (keyList) {\n//   if (!keyList) return keyList\n//   return keyList.map(key => String(key))\n// }\n\nvar internalProcessProps = function internalProcessProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _extends(_extends({}, props), {\n    class: props.class || props.className,\n    style: props.style,\n    key: props.key\n  });\n};\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n  var _ref3 = processor || {},\n    _ref3$processProps = _ref3.processProps,\n    processProps = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_a) {\n    var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n    var childrenNodes = convertDataToTree(children, processor);\n    return _createVNode(TreeNode, processProps(props), {\n      default: function _default() {\n        return [childrenNodes];\n      }\n    });\n  });\n} // TODO: ========================= NEW LOGIC =========================\n\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\n\nexport function convertTreeToEntities(treeNodes) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    initWrapper = _ref4.initWrapper,\n    processEntity = _ref4.processEntity,\n    onProcessFinished = _ref4.onProcessFinished;\n  var posEntities = new Map();\n  var keyEntities = new Map();\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n      index = item.index,\n      pos = item.pos,\n      key = item.key,\n      parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities.set(pos, entity);\n    keyEntities.set(key, entity); // Fill children\n\n    entity.parent = posEntities.get(parentPos);\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n  return wrapper;\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n  var keyProps;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  } // keyProps.checkedKeys = keyListToString(keyProps.checkedKeys)\n  // keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys)\n\n  return keyProps;\n}\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\n\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = new Map();\n  var halfCheckedKeys = new Map(); // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys.set(key, true);\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys.set(key, true);\n  }); // Conduct up\n\n  function conductUp(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n      parent = entity.parent,\n      node = entity.node;\n    if (isCheckDisabled(node)) return; // Check child node checked status\n\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref5) {\n      var childKey = _ref5.key;\n      var childChecked = checkedKeys.get(childKey);\n      var childHalfChecked = halfCheckedKeys.get(childKey);\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    }); // Update checked status\n\n    if (isCheck) {\n      checkedKeys.set(key, everyChildChecked);\n    } else {\n      checkedKeys.set(key, false);\n    }\n    halfCheckedKeys.set(key, someChildChecked);\n    if (parent) {\n      conductUp(parent.key);\n    }\n  } // Conduct down\n\n  function conductDown(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n      node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys.set(key, isCheck);\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n  function conduct(key) {\n    var entity = keyEntities.get(key);\n    if (!entity) {\n      warning(false, \"'\".concat(key, \"' does not exist in the tree.\"));\n      return;\n    }\n    var children = entity.children,\n      parent = entity.parent,\n      node = entity.node;\n    checkedKeys.set(key, isCheck);\n    if (isCheckDisabled(node)) return; // Conduct down\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    }); // Conduct up\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = []; // Fill checked list\n\n  var _iterator = _createForOfIteratorHelper(checkedKeys),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        key = _step$value[0],\n        value = _step$value[1];\n      if (value) {\n        checkedKeyList.push(key);\n      }\n    } // Fill half checked list\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(halfCheckedKeys),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n        _key = _step2$value[0],\n        _value = _step2$value[1];\n      if (!checkedKeys.get(_key) && _value) {\n        halfCheckedKeyList.push(_key);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Map();\n  function conductUp(key) {\n    if (expandedKeys.get(key)) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    expandedKeys.set(key, true);\n    var parent = entity.parent,\n      node = entity.node;\n    var props = getOptionProps(node);\n    if (props && props.disabled) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys.keys());\n}\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props\n */\n\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n    return prev;\n  }, {});\n}","map":{"version":3,"names":["_toConsumableArray","_slicedToArray","_createForOfIteratorHelper","_typeof","_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","warning","TreeNode","getOptionProps","getSlot","DRAG_SIDE_RANGE","DRAG_MIN_GAP","onlyTreeNodeWarned","warnOnlyTreeNode","arrDel","list","value","clone","slice","index","splice","arrAdd","push","posToArr","pos","split","getPosition","level","concat","isTreeNode","node","type","getNodeChildren","children","arguments","undefined","filter","isCheckDisabled","_ref","disabled","disableCheckbox","checkable","traverseTreeNodes","treeNodes","callback","processNode","parent","childList","key","data","parentPos","forEach","subNode","subIndex","mapChildren","func","map","getDragNodesKeys","_getOptionProps","eventKey","dragNodesKeys","_ref2","calcDropPosition","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","calcSelectedKeys","selectedKeys","props","multiple","internalProcessProps","class","className","style","convertDataToTree","treeData","processor","_ref3","_ref3$processProps","processProps","Array","isArray","_a","childrenNodes","default","_default","convertTreeToEntities","_ref4","initWrapper","processEntity","onProcessFinished","posEntities","Map","keyEntities","wrapper","item","entity","set","get","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductCheck","keyList","isCheck","checkStatus","conductUp","everyChildChecked","someChildChecked","child","_ref5","childKey","childChecked","childHalfChecked","conductDown","conduct","checkedKeyList","halfCheckedKeyList","_iterator","_step","n","done","_step$value","err","f","_iterator2","_step2","_step2$value","_key","_value","conductExpandParent","expandedKeys","getDataAndAria","reduce","prev","substr"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/vc-tree/src/util.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint no-loop-func: 0*/\n\n\nimport warning from 'warning';\nimport TreeNode from './TreeNode';\nimport { getOptionProps, getSlot } from '../../_util/props-util';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node.type && node.type.isTreeNode;\n}\nexport function getNodeChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return children.filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = getOptionProps(node) || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? getSlot(node) : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0; // Filter children\n\n    var childList = getNodeChildren(children); // Process node if is not root\n\n    if (node) {\n      var key = node.key;\n\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    } // Process children node\n\n\n    childList.forEach(function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n\n  processNode(null);\n}\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\n\nexport function mapChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var func = arguments.length > 1 ? arguments[1] : undefined;\n  var list = children.map(func);\n\n  if (list.length === 1) {\n    return list[0];\n  }\n\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _getOptionProps = getOptionProps(node),\n      eventKey = _getOptionProps.eventKey,\n      pos = _getOptionProps.pos;\n\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) {\n    return undefined;\n  }\n\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n// function keyListToString (keyList) {\n//   if (!keyList) return keyList\n//   return keyList.map(key => String(key))\n// }\n\nvar internalProcessProps = function internalProcessProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _extends(_extends({}, props), {\n    class: props.class || props.className,\n    style: props.style,\n    key: props.key\n  });\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref3 = processor || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_a) {\n    var children = _a.children,\n        props = __rest(_a, [\"children\"]);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return _createVNode(TreeNode, processProps(props), {\n      default: function _default() {\n        return [childrenNodes];\n      }\n    });\n  });\n} // TODO: ========================= NEW LOGIC =========================\n\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\n\nexport function convertTreeToEntities(treeNodes) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref4.initWrapper,\n      processEntity = _ref4.processEntity,\n      onProcessFinished = _ref4.onProcessFinished;\n\n  var posEntities = new Map();\n  var keyEntities = new Map();\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities.set(pos, entity);\n    keyEntities.set(key, entity); // Fill children\n\n    entity.parent = posEntities.get(parentPos);\n\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  } // keyProps.checkedKeys = keyListToString(keyProps.checkedKeys)\n  // keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys)\n\n\n  return keyProps;\n}\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\n\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = new Map();\n  var halfCheckedKeys = new Map(); // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys.set(key, true);\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys.set(key, true);\n  }); // Conduct up\n\n  function conductUp(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    if (isCheckDisabled(node)) return; // Check child node checked status\n\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref5) {\n      var childKey = _ref5.key;\n      var childChecked = checkedKeys.get(childKey);\n      var childHalfChecked = halfCheckedKeys.get(childKey);\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    }); // Update checked status\n\n    if (isCheck) {\n      checkedKeys.set(key, everyChildChecked);\n    } else {\n      checkedKeys.set(key, false);\n    }\n\n    halfCheckedKeys.set(key, someChildChecked);\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  } // Conduct down\n\n\n  function conductDown(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n        node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys.set(key, isCheck);\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities.get(key);\n\n    if (!entity) {\n      warning(false, \"'\".concat(key, \"' does not exist in the tree.\"));\n      return;\n    }\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    checkedKeys.set(key, isCheck);\n    if (isCheckDisabled(node)) return; // Conduct down\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    }); // Conduct up\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = []; // Fill checked list\n\n  var _iterator = _createForOfIteratorHelper(checkedKeys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          value = _step$value[1];\n\n      if (value) {\n        checkedKeyList.push(key);\n      }\n    } // Fill half checked list\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(halfCheckedKeys),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          _key = _step2$value[0],\n          _value = _step2$value[1];\n\n      if (!checkedKeys.get(_key) && _value) {\n        halfCheckedKeyList.push(_key);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Map();\n\n  function conductUp(key) {\n    if (expandedKeys.get(key)) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    expandedKeys.set(key, true);\n    var parent = entity.parent,\n        node = entity.node;\n    var props = getOptionProps(node);\n    if (props && props.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys.keys());\n}\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props\n */\n\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,0BAA0B,MAAM,sDAAsD;AAC7F,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AAEjD,IAAIC,MAAM,GAAG,IAAI,IAAI,IAAI,CAACA,MAAM,IAAI,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EAEV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE;IACf,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACjF;EAEA,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3I,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAAER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACnG;EACA,OAAOR,CAAC;AACV,CAAC;AACD;;AAGA,OAAOW,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,EAAEC,OAAO,QAAQ,wBAAwB;AAChE,IAAIC,eAAe,GAAG,IAAI;AAC1B,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,kBAAkB,GAAG,KAAK;AAC9B,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,IAAID,kBAAkB,EAAE;EACxBA,kBAAkB,GAAG,IAAI;EACzBN,OAAO,CAAC,KAAK,EAAE,wCAAwC,CAAC;AAC1D;AACA,OAAO,SAASQ,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAClC,IAAIC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;EACxB,IAAIC,KAAK,GAAGF,KAAK,CAAChB,OAAO,CAACe,KAAK,CAAC;EAEhC,IAAIG,KAAK,IAAI,CAAC,EAAE;IACdF,KAAK,CAACG,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;EACxB;EAEA,OAAOF,KAAK;AACd;AACA,OAAO,SAASI,MAAMA,CAACN,IAAI,EAAEC,KAAK,EAAE;EAClC,IAAIC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;EAExB,IAAID,KAAK,CAAChB,OAAO,CAACe,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IAC/BC,KAAK,CAACK,IAAI,CAACN,KAAK,CAAC;EACnB;EAEA,OAAOC,KAAK;AACd;AACA,OAAO,SAASM,QAAQA,CAACC,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;AACvB;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAER,KAAK,EAAE;EACxC,OAAO,EAAE,CAACS,MAAM,CAACD,KAAK,EAAE,GAAG,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;AAC5C;AACA,OAAO,SAASU,UAAUA,CAACC,IAAI,EAAE;EAC/B,OAAOA,IAAI,CAACC,IAAI,IAAID,IAAI,CAACC,IAAI,CAACF,UAAU;AAC1C;AACA,OAAO,SAASG,eAAeA,CAAA,EAAG;EAChC,IAAIC,QAAQ,GAAGC,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACrF,OAAOD,QAAQ,CAACG,MAAM,CAACP,UAAU,CAAC;AACpC;AACA,OAAO,SAASQ,eAAeA,CAACP,IAAI,EAAE;EACpC,IAAIQ,IAAI,GAAG9B,cAAc,CAACsB,IAAI,CAAC,IAAI,CAAC,CAAC;IACjCS,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IACxBC,eAAe,GAAGF,IAAI,CAACE,eAAe;IACtCC,SAAS,GAAGH,IAAI,CAACG,SAAS;EAE9B,OAAO,CAAC,EAAEF,QAAQ,IAAIC,eAAe,CAAC,IAAIC,SAAS,KAAK,KAAK;AAC/D;AACA,OAAO,SAASC,iBAAiBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACrD,SAASC,WAAWA,CAACf,IAAI,EAAEX,KAAK,EAAE2B,MAAM,EAAE;IACxC,IAAIb,QAAQ,GAAGH,IAAI,GAAGrB,OAAO,CAACqB,IAAI,CAAC,GAAGa,SAAS;IAC/C,IAAInB,GAAG,GAAGM,IAAI,GAAGJ,WAAW,CAACoB,MAAM,CAACtB,GAAG,EAAEL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;IAErD,IAAI4B,SAAS,GAAGf,eAAe,CAACC,QAAQ,CAAC,CAAC,CAAC;;IAE3C,IAAIH,IAAI,EAAE;MACR,IAAIkB,GAAG,GAAGlB,IAAI,CAACkB,GAAG;MAElB,IAAI,CAACA,GAAG,KAAKA,GAAG,KAAKb,SAAS,IAAIa,GAAG,KAAK,IAAI,CAAC,EAAE;QAC/CA,GAAG,GAAGxB,GAAG;MACX;MAEA,IAAIyB,IAAI,GAAG;QACTnB,IAAI,EAAEA,IAAI;QACVX,KAAK,EAAEA,KAAK;QACZK,GAAG,EAAEA,GAAG;QACRwB,GAAG,EAAEA,GAAG;QACRE,SAAS,EAAEJ,MAAM,CAAChB,IAAI,GAAGgB,MAAM,CAACtB,GAAG,GAAG;MACxC,CAAC;MACDoB,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC;;IAGFF,SAAS,CAACI,OAAO,CAAC,UAAUC,OAAO,EAAEC,QAAQ,EAAE;MAC7CR,WAAW,CAACO,OAAO,EAAEC,QAAQ,EAAE;QAC7BvB,IAAI,EAAEA,IAAI;QACVN,GAAG,EAAEA;MACP,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAqB,WAAW,CAAC,IAAI,CAAC;AACnB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASS,WAAWA,CAAA,EAAG;EAC5B,IAAIrB,QAAQ,GAAGC,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACrF,IAAIqB,IAAI,GAAGrB,SAAS,CAAC9B,MAAM,GAAG,CAAC,GAAG8B,SAAS,CAAC,CAAC,CAAC,GAAGC,SAAS;EAC1D,IAAIpB,IAAI,GAAGkB,QAAQ,CAACuB,GAAG,CAACD,IAAI,CAAC;EAE7B,IAAIxC,IAAI,CAACX,MAAM,KAAK,CAAC,EAAE;IACrB,OAAOW,IAAI,CAAC,CAAC,CAAC;EAChB;EAEA,OAAOA,IAAI;AACb;AACA,OAAO,SAAS0C,gBAAgBA,CAACd,SAAS,EAAEb,IAAI,EAAE;EAChD,IAAI4B,eAAe,GAAGlD,cAAc,CAACsB,IAAI,CAAC;IACtC6B,QAAQ,GAAGD,eAAe,CAACC,QAAQ;IACnCnC,GAAG,GAAGkC,eAAe,CAAClC,GAAG;EAE7B,IAAIoC,aAAa,GAAG,EAAE;EACtBlB,iBAAiB,CAACC,SAAS,EAAE,UAAUkB,KAAK,EAAE;IAC5C,IAAIb,GAAG,GAAGa,KAAK,CAACb,GAAG;IACnBY,aAAa,CAACtC,IAAI,CAAC0B,GAAG,CAAC;EACzB,CAAC,CAAC;EACFY,aAAa,CAACtC,IAAI,CAACqC,QAAQ,IAAInC,GAAG,CAAC;EACnC,OAAOoC,aAAa;AACtB;AACA,OAAO,SAASE,gBAAgBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAChD,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAE3B,IAAIC,qBAAqB,GAAGF,QAAQ,CAACG,YAAY,CAACC,qBAAqB,CAAC,CAAC;IACrEC,GAAG,GAAGH,qBAAqB,CAACG,GAAG;IAC/BC,MAAM,GAAGJ,qBAAqB,CAACI,MAAM;IACrCC,MAAM,GAAGL,qBAAqB,CAACK,MAAM;EAEzC,IAAIC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACH,MAAM,GAAG7D,eAAe,EAAEC,YAAY,CAAC;EAE1D,IAAIsD,OAAO,IAAII,GAAG,GAAGG,GAAG,EAAE;IACxB,OAAO,CAAC,CAAC;EACX;EAEA,IAAIP,OAAO,IAAIK,MAAM,GAAGE,GAAG,EAAE;IAC3B,OAAO,CAAC;EACV;EAEA,OAAO,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,gBAAgBA,CAACC,YAAY,EAAEC,KAAK,EAAE;EACpD,IAAI,CAACD,YAAY,EAAE;IACjB,OAAOzC,SAAS;EAClB;EAEA,IAAI2C,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAE7B,IAAIA,QAAQ,EAAE;IACZ,OAAOF,YAAY,CAAC1D,KAAK,CAAC,CAAC;EAC7B;EAEA,IAAI0D,YAAY,CAACxE,MAAM,EAAE;IACvB,OAAO,CAACwE,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B;EAEA,OAAOA,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIG,oBAAoB,GAAG,SAASA,oBAAoBA,CAAA,EAAG;EACzD,IAAIF,KAAK,GAAG3C,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAClF,OAAO7C,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEwF,KAAK,CAAC,EAAE;IACnCG,KAAK,EAAEH,KAAK,CAACG,KAAK,IAAIH,KAAK,CAACI,SAAS;IACrCC,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBlC,GAAG,EAAE6B,KAAK,CAAC7B;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,SAASmC,iBAAiBA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EACrD,IAAI,CAACD,QAAQ,EAAE,OAAO,EAAE;EAExB,IAAIE,KAAK,GAAGD,SAAS,IAAI,CAAC,CAAC;IACvBE,kBAAkB,GAAGD,KAAK,CAACE,YAAY;IACvCA,YAAY,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAGR,oBAAoB,GAAGQ,kBAAkB;EAE5F,IAAIxE,IAAI,GAAG0E,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;EAC1D,OAAOrE,IAAI,CAACyC,GAAG,CAAC,UAAUmC,EAAE,EAAE;IAC5B,IAAI1D,QAAQ,GAAG0D,EAAE,CAAC1D,QAAQ;MACtB4C,KAAK,GAAGrF,MAAM,CAACmG,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;IAEpC,IAAIC,aAAa,GAAGT,iBAAiB,CAAClD,QAAQ,EAAEoD,SAAS,CAAC;IAC1D,OAAO9F,YAAY,CAACgB,QAAQ,EAAEiF,YAAY,CAACX,KAAK,CAAC,EAAE;MACjDgB,OAAO,EAAE,SAASC,QAAQA,CAAA,EAAG;QAC3B,OAAO,CAACF,aAAa,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,qBAAqBA,CAACpD,SAAS,EAAE;EAC/C,IAAIqD,KAAK,GAAG9D,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9E+D,WAAW,GAAGD,KAAK,CAACC,WAAW;IAC/BC,aAAa,GAAGF,KAAK,CAACE,aAAa;IACnCC,iBAAiB,GAAGH,KAAK,CAACG,iBAAiB;EAE/C,IAAIC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B,IAAIC,WAAW,GAAG,IAAID,GAAG,CAAC,CAAC;EAC3B,IAAIE,OAAO,GAAG;IACZH,WAAW,EAAEA,WAAW;IACxBE,WAAW,EAAEA;EACf,CAAC;EAED,IAAIL,WAAW,EAAE;IACfM,OAAO,GAAGN,WAAW,CAACM,OAAO,CAAC,IAAIA,OAAO;EAC3C;EAEA7D,iBAAiB,CAACC,SAAS,EAAE,UAAU6D,IAAI,EAAE;IAC3C,IAAI1E,IAAI,GAAG0E,IAAI,CAAC1E,IAAI;MAChBX,KAAK,GAAGqF,IAAI,CAACrF,KAAK;MAClBK,GAAG,GAAGgF,IAAI,CAAChF,GAAG;MACdwB,GAAG,GAAGwD,IAAI,CAACxD,GAAG;MACdE,SAAS,GAAGsD,IAAI,CAACtD,SAAS;IAC9B,IAAIuD,MAAM,GAAG;MACX3E,IAAI,EAAEA,IAAI;MACVX,KAAK,EAAEA,KAAK;MACZ6B,GAAG,EAAEA,GAAG;MACRxB,GAAG,EAAEA;IACP,CAAC;IACD4E,WAAW,CAACM,GAAG,CAAClF,GAAG,EAAEiF,MAAM,CAAC;IAC5BH,WAAW,CAACI,GAAG,CAAC1D,GAAG,EAAEyD,MAAM,CAAC,CAAC,CAAC;;IAE9BA,MAAM,CAAC3D,MAAM,GAAGsD,WAAW,CAACO,GAAG,CAACzD,SAAS,CAAC;IAE1C,IAAIuD,MAAM,CAAC3D,MAAM,EAAE;MACjB2D,MAAM,CAAC3D,MAAM,CAACb,QAAQ,GAAGwE,MAAM,CAAC3D,MAAM,CAACb,QAAQ,IAAI,EAAE;MACrDwE,MAAM,CAAC3D,MAAM,CAACb,QAAQ,CAACX,IAAI,CAACmF,MAAM,CAAC;IACrC;IAEA,IAAIP,aAAa,EAAE;MACjBA,aAAa,CAACO,MAAM,EAAEF,OAAO,CAAC;IAChC;EACF,CAAC,CAAC;EAEF,IAAIJ,iBAAiB,EAAE;IACrBA,iBAAiB,CAACI,OAAO,CAAC;EAC5B;EAEA,OAAOA,OAAO;AAChB;AACA;AACA;AACA;;AAEA,OAAO,SAASK,gBAAgBA,CAACC,IAAI,EAAE;EACrC,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,IAAI;EACb,CAAC,CAAC;;EAGF,IAAIC,QAAQ;EAEZ,IAAIrB,KAAK,CAACC,OAAO,CAACmB,IAAI,CAAC,EAAE;IACvB;IACAC,QAAQ,GAAG;MACTC,WAAW,EAAEF,IAAI;MACjBG,eAAe,EAAE7E;IACnB,CAAC;EACH,CAAC,MAAM,IAAI/C,OAAO,CAACyH,IAAI,CAAC,KAAK,QAAQ,EAAE;IACrCC,QAAQ,GAAG;MACTC,WAAW,EAAEF,IAAI,CAACI,OAAO,IAAI9E,SAAS;MACtC6E,eAAe,EAAEH,IAAI,CAACK,WAAW,IAAI/E;IACvC,CAAC;EACH,CAAC,MAAM;IACL7B,OAAO,CAAC,KAAK,EAAE,4CAA4C,CAAC;IAC5D,OAAO,IAAI;EACb,CAAC,CAAC;EACF;;EAGA,OAAOwG,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASK,YAAYA,CAACC,OAAO,EAAEC,OAAO,EAAEf,WAAW,EAAE;EAC1D,IAAIgB,WAAW,GAAGpF,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACxF,IAAI6E,WAAW,GAAG,IAAIV,GAAG,CAAC,CAAC;EAC3B,IAAIW,eAAe,GAAG,IAAIX,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEjC,CAACiB,WAAW,CAACP,WAAW,IAAI,EAAE,EAAE5D,OAAO,CAAC,UAAUH,GAAG,EAAE;IACrD+D,WAAW,CAACL,GAAG,CAAC1D,GAAG,EAAE,IAAI,CAAC;EAC5B,CAAC,CAAC;EACF,CAACsE,WAAW,CAACN,eAAe,IAAI,EAAE,EAAE7D,OAAO,CAAC,UAAUH,GAAG,EAAE;IACzDgE,eAAe,CAACN,GAAG,CAAC1D,GAAG,EAAE,IAAI,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC;;EAEJ,SAASuE,SAASA,CAACvE,GAAG,EAAE;IACtB,IAAI+D,WAAW,CAACJ,GAAG,CAAC3D,GAAG,CAAC,KAAKqE,OAAO,EAAE;IACtC,IAAIZ,MAAM,GAAGH,WAAW,CAACK,GAAG,CAAC3D,GAAG,CAAC;IACjC,IAAI,CAACyD,MAAM,EAAE;IACb,IAAIxE,QAAQ,GAAGwE,MAAM,CAACxE,QAAQ;MAC1Ba,MAAM,GAAG2D,MAAM,CAAC3D,MAAM;MACtBhB,IAAI,GAAG2E,MAAM,CAAC3E,IAAI;IACtB,IAAIO,eAAe,CAACP,IAAI,CAAC,EAAE,OAAO,CAAC;;IAEnC,IAAI0F,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,gBAAgB,GAAG,KAAK,CAAC,CAAC;;IAE9B,CAACxF,QAAQ,IAAI,EAAE,EAAEG,MAAM,CAAC,UAAUsF,KAAK,EAAE;MACvC,OAAO,CAACrF,eAAe,CAACqF,KAAK,CAAC5F,IAAI,CAAC;IACrC,CAAC,CAAC,CAACqB,OAAO,CAAC,UAAUwE,KAAK,EAAE;MAC1B,IAAIC,QAAQ,GAAGD,KAAK,CAAC3E,GAAG;MACxB,IAAI6E,YAAY,GAAGd,WAAW,CAACJ,GAAG,CAACiB,QAAQ,CAAC;MAC5C,IAAIE,gBAAgB,GAAGd,eAAe,CAACL,GAAG,CAACiB,QAAQ,CAAC;MACpD,IAAIC,YAAY,IAAIC,gBAAgB,EAAEL,gBAAgB,GAAG,IAAI;MAC7D,IAAI,CAACI,YAAY,EAAEL,iBAAiB,GAAG,KAAK;IAC9C,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIH,OAAO,EAAE;MACXN,WAAW,CAACL,GAAG,CAAC1D,GAAG,EAAEwE,iBAAiB,CAAC;IACzC,CAAC,MAAM;MACLT,WAAW,CAACL,GAAG,CAAC1D,GAAG,EAAE,KAAK,CAAC;IAC7B;IAEAgE,eAAe,CAACN,GAAG,CAAC1D,GAAG,EAAEyE,gBAAgB,CAAC;IAE1C,IAAI3E,MAAM,EAAE;MACVyE,SAAS,CAACzE,MAAM,CAACE,GAAG,CAAC;IACvB;EACF,CAAC,CAAC;;EAGF,SAAS+E,WAAWA,CAAC/E,GAAG,EAAE;IACxB,IAAI+D,WAAW,CAACJ,GAAG,CAAC3D,GAAG,CAAC,KAAKqE,OAAO,EAAE;IACtC,IAAIZ,MAAM,GAAGH,WAAW,CAACK,GAAG,CAAC3D,GAAG,CAAC;IACjC,IAAI,CAACyD,MAAM,EAAE;IACb,IAAIxE,QAAQ,GAAGwE,MAAM,CAACxE,QAAQ;MAC1BH,IAAI,GAAG2E,MAAM,CAAC3E,IAAI;IACtB,IAAIO,eAAe,CAACP,IAAI,CAAC,EAAE;IAC3BiF,WAAW,CAACL,GAAG,CAAC1D,GAAG,EAAEqE,OAAO,CAAC;IAC7B,CAACpF,QAAQ,IAAI,EAAE,EAAEkB,OAAO,CAAC,UAAUuE,KAAK,EAAE;MACxCK,WAAW,CAACL,KAAK,CAAC1E,GAAG,CAAC;IACxB,CAAC,CAAC;EACJ;EAEA,SAASgF,OAAOA,CAAChF,GAAG,EAAE;IACpB,IAAIyD,MAAM,GAAGH,WAAW,CAACK,GAAG,CAAC3D,GAAG,CAAC;IAEjC,IAAI,CAACyD,MAAM,EAAE;MACXnG,OAAO,CAAC,KAAK,EAAE,GAAG,CAACsB,MAAM,CAACoB,GAAG,EAAE,+BAA+B,CAAC,CAAC;MAChE;IACF;IAEA,IAAIf,QAAQ,GAAGwE,MAAM,CAACxE,QAAQ;MAC1Ba,MAAM,GAAG2D,MAAM,CAAC3D,MAAM;MACtBhB,IAAI,GAAG2E,MAAM,CAAC3E,IAAI;IACtBiF,WAAW,CAACL,GAAG,CAAC1D,GAAG,EAAEqE,OAAO,CAAC;IAC7B,IAAIhF,eAAe,CAACP,IAAI,CAAC,EAAE,OAAO,CAAC;;IAEnC,CAACG,QAAQ,IAAI,EAAE,EAAEG,MAAM,CAAC,UAAUsF,KAAK,EAAE;MACvC,OAAO,CAACrF,eAAe,CAACqF,KAAK,CAAC5F,IAAI,CAAC;IACrC,CAAC,CAAC,CAACqB,OAAO,CAAC,UAAUuE,KAAK,EAAE;MAC1BK,WAAW,CAACL,KAAK,CAAC1E,GAAG,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIF,MAAM,EAAE;MACVyE,SAAS,CAACzE,MAAM,CAACE,GAAG,CAAC;IACvB;EACF;EAEA,CAACoE,OAAO,IAAI,EAAE,EAAEjE,OAAO,CAAC,UAAUH,GAAG,EAAE;IACrCgF,OAAO,CAAChF,GAAG,CAAC;EACd,CAAC,CAAC;EACF,IAAIiF,cAAc,GAAG,EAAE;EACvB,IAAIC,kBAAkB,GAAG,EAAE,CAAC,CAAC;;EAE7B,IAAIC,SAAS,GAAGhJ,0BAA0B,CAAC4H,WAAW,CAAC;IACnDqB,KAAK;EAET,IAAI;IACF,KAAKD,SAAS,CAAC1I,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC2I,KAAK,GAAGD,SAAS,CAACE,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;MAClD,IAAIC,WAAW,GAAGrJ,cAAc,CAACkJ,KAAK,CAACpH,KAAK,EAAE,CAAC,CAAC;QAC5CgC,GAAG,GAAGuF,WAAW,CAAC,CAAC,CAAC;QACpBvH,KAAK,GAAGuH,WAAW,CAAC,CAAC,CAAC;MAE1B,IAAIvH,KAAK,EAAE;QACTiH,cAAc,CAAC3G,IAAI,CAAC0B,GAAG,CAAC;MAC1B;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOwF,GAAG,EAAE;IACZL,SAAS,CAACzI,CAAC,CAAC8I,GAAG,CAAC;EAClB,CAAC,SAAS;IACRL,SAAS,CAACM,CAAC,CAAC,CAAC;EACf;EAEA,IAAIC,UAAU,GAAGvJ,0BAA0B,CAAC6H,eAAe,CAAC;IACxD2B,MAAM;EAEV,IAAI;IACF,KAAKD,UAAU,CAACjJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAACkJ,MAAM,GAAGD,UAAU,CAACL,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;MACrD,IAAIM,YAAY,GAAG1J,cAAc,CAACyJ,MAAM,CAAC3H,KAAK,EAAE,CAAC,CAAC;QAC9C6H,IAAI,GAAGD,YAAY,CAAC,CAAC,CAAC;QACtBE,MAAM,GAAGF,YAAY,CAAC,CAAC,CAAC;MAE5B,IAAI,CAAC7B,WAAW,CAACJ,GAAG,CAACkC,IAAI,CAAC,IAAIC,MAAM,EAAE;QACpCZ,kBAAkB,CAAC5G,IAAI,CAACuH,IAAI,CAAC;MAC/B;IACF;EACF,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZE,UAAU,CAAChJ,CAAC,CAAC8I,GAAG,CAAC;EACnB,CAAC,SAAS;IACRE,UAAU,CAACD,CAAC,CAAC,CAAC;EAChB;EAEA,OAAO;IACL1B,WAAW,EAAEkB,cAAc;IAC3BjB,eAAe,EAAEkB;EACnB,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASa,mBAAmBA,CAAC3B,OAAO,EAAEd,WAAW,EAAE;EACxD,IAAI0C,YAAY,GAAG,IAAI3C,GAAG,CAAC,CAAC;EAE5B,SAASkB,SAASA,CAACvE,GAAG,EAAE;IACtB,IAAIgG,YAAY,CAACrC,GAAG,CAAC3D,GAAG,CAAC,EAAE;IAC3B,IAAIyD,MAAM,GAAGH,WAAW,CAACK,GAAG,CAAC3D,GAAG,CAAC;IACjC,IAAI,CAACyD,MAAM,EAAE;IACbuC,YAAY,CAACtC,GAAG,CAAC1D,GAAG,EAAE,IAAI,CAAC;IAC3B,IAAIF,MAAM,GAAG2D,MAAM,CAAC3D,MAAM;MACtBhB,IAAI,GAAG2E,MAAM,CAAC3E,IAAI;IACtB,IAAI+C,KAAK,GAAGrE,cAAc,CAACsB,IAAI,CAAC;IAChC,IAAI+C,KAAK,IAAIA,KAAK,CAACtC,QAAQ,EAAE;IAE7B,IAAIO,MAAM,EAAE;MACVyE,SAAS,CAACzE,MAAM,CAACE,GAAG,CAAC;IACvB;EACF;EAEA,CAACoE,OAAO,IAAI,EAAE,EAAEjE,OAAO,CAAC,UAAUH,GAAG,EAAE;IACrCuE,SAAS,CAACvE,GAAG,CAAC;EAChB,CAAC,CAAC;EACF,OAAO/D,kBAAkB,CAAC+J,YAAY,CAACnC,IAAI,CAAC,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASoC,cAAcA,CAACpE,KAAK,EAAE;EACpC,OAAOhF,MAAM,CAACgH,IAAI,CAAChC,KAAK,CAAC,CAACqE,MAAM,CAAC,UAAUC,IAAI,EAAEnG,GAAG,EAAE;IACpD,IAAIA,GAAG,CAACoG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,IAAIpG,GAAG,CAACoG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;MAChED,IAAI,CAACnG,GAAG,CAAC,GAAG6B,KAAK,CAAC7B,GAAG,CAAC;IACxB;IAEA,OAAOmG,IAAI;EACb,CAAC,EAAE,CAAC,CAAC,CAAC;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}