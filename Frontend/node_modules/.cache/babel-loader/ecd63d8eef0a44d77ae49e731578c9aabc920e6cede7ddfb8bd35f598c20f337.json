{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { computed } from 'vue';\nexport default function useColumnManager(columns) {\n  var _leafColumns = function _leafColumns(cls) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var leafColumns = [];\n    cls.forEach(function (column) {\n      column.fixed = fixed || column.fixed;\n      if (!column.children) {\n        leafColumns.push(column);\n      } else {\n        leafColumns.push.apply(leafColumns, _toConsumableArray(_leafColumns(column.children, column.fixed)));\n      }\n    });\n    return leafColumns;\n  }; // add appropriate rowspan and colspan to column\n\n  var groupedColumns = computed(function () {\n    var _groupColumns = function _groupColumns(cls) {\n      var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      var fixed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      // track how many rows we got\n      rows[currentRow] = rows[currentRow] || [];\n      var grouped = [];\n      var setRowSpan = function setRowSpan(column) {\n        var rowSpan = rows.length - currentRow;\n        if (column && !column.children &&\n        // parent columns.value are supposed to be one row\n        rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\n          column.rowSpan = rowSpan;\n        }\n      };\n      cls.forEach(function (column, index) {\n        var newColumn = _extends({}, column);\n        newColumn.fixed = fixed || column.fixed;\n        rows[currentRow].push(newColumn);\n        parentColumn.colSpan = parentColumn.colSpan || 0;\n        if (newColumn.children && newColumn.children.length > 0) {\n          newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows, newColumn.fixed);\n          parentColumn.colSpan += newColumn.colSpan;\n        } else {\n          parentColumn.colSpan += 1;\n        } // update rowspan to all same row columns.value\n\n        for (var i = 0; i < rows[currentRow].length - 1; i += 1) {\n          setRowSpan(rows[currentRow][i]);\n        } // last column, update rowspan immediately\n\n        if (index + 1 === cls.length) {\n          setRowSpan(newColumn);\n        }\n        grouped.push(newColumn);\n      });\n      return grouped;\n    };\n    return _groupColumns(columns.value);\n  });\n  var isAnyColumnsFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return !!column.fixed;\n    });\n  });\n  var isAnyColumnsLeftFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return column.fixed === 'left' || column.fixed === true;\n    });\n  });\n  var isAnyColumnsRightFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return column.fixed === 'right';\n    });\n  });\n  var leftColumns = computed(function () {\n    return groupedColumns.value.filter(function (column) {\n      return column.fixed === 'left' || column.fixed === true;\n    });\n  });\n  var rightColumns = computed(function () {\n    return groupedColumns.value.filter(function (column) {\n      return column.fixed === 'right';\n    });\n  });\n  var leafColumns = computed(function () {\n    return _leafColumns(columns.value);\n  });\n  var leftLeafColumns = computed(function () {\n    return _leafColumns(leftColumns.value);\n  });\n  var rightLeafColumns = computed(function () {\n    return _leafColumns(rightColumns.value);\n  });\n  return {\n    groupedColumns: groupedColumns,\n    isAnyColumnsFixed: isAnyColumnsFixed,\n    isAnyColumnsLeftFixed: isAnyColumnsLeftFixed,\n    isAnyColumnsRightFixed: isAnyColumnsRightFixed,\n    leftColumns: leftColumns,\n    rightColumns: rightColumns,\n    leafColumns: leafColumns,\n    leftLeafColumns: leftLeafColumns,\n    rightLeafColumns: rightLeafColumns\n  };\n}","map":{"version":3,"names":["_extends","_toConsumableArray","computed","useColumnManager","columns","_leafColumns","cls","fixed","arguments","length","undefined","leafColumns","forEach","column","children","push","apply","groupedColumns","_groupColumns","currentRow","parentColumn","rows","grouped","setRowSpan","rowSpan","index","newColumn","colSpan","i","value","isAnyColumnsFixed","some","isAnyColumnsLeftFixed","isAnyColumnsRightFixed","leftColumns","filter","rightColumns","leftLeafColumns","rightLeafColumns"],"sources":["/Users/lyonxie/Desktop/test/node_modules/ant-design-vue/es/vc-table/src/useColumnManager.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { computed } from 'vue';\nexport default function useColumnManager(columns) {\n  var _leafColumns = function _leafColumns(cls) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var leafColumns = [];\n    cls.forEach(function (column) {\n      column.fixed = fixed || column.fixed;\n\n      if (!column.children) {\n        leafColumns.push(column);\n      } else {\n        leafColumns.push.apply(leafColumns, _toConsumableArray(_leafColumns(column.children, column.fixed)));\n      }\n    });\n    return leafColumns;\n  }; // add appropriate rowspan and colspan to column\n\n\n  var groupedColumns = computed(function () {\n    var _groupColumns = function _groupColumns(cls) {\n      var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      var fixed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      // track how many rows we got\n      rows[currentRow] = rows[currentRow] || [];\n      var grouped = [];\n\n      var setRowSpan = function setRowSpan(column) {\n        var rowSpan = rows.length - currentRow;\n\n        if (column && !column.children && // parent columns.value are supposed to be one row\n        rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\n          column.rowSpan = rowSpan;\n        }\n      };\n\n      cls.forEach(function (column, index) {\n        var newColumn = _extends({}, column);\n\n        newColumn.fixed = fixed || column.fixed;\n        rows[currentRow].push(newColumn);\n        parentColumn.colSpan = parentColumn.colSpan || 0;\n\n        if (newColumn.children && newColumn.children.length > 0) {\n          newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows, newColumn.fixed);\n          parentColumn.colSpan += newColumn.colSpan;\n        } else {\n          parentColumn.colSpan += 1;\n        } // update rowspan to all same row columns.value\n\n\n        for (var i = 0; i < rows[currentRow].length - 1; i += 1) {\n          setRowSpan(rows[currentRow][i]);\n        } // last column, update rowspan immediately\n\n\n        if (index + 1 === cls.length) {\n          setRowSpan(newColumn);\n        }\n\n        grouped.push(newColumn);\n      });\n      return grouped;\n    };\n\n    return _groupColumns(columns.value);\n  });\n  var isAnyColumnsFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return !!column.fixed;\n    });\n  });\n  var isAnyColumnsLeftFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return column.fixed === 'left' || column.fixed === true;\n    });\n  });\n  var isAnyColumnsRightFixed = computed(function () {\n    return columns.value.some(function (column) {\n      return column.fixed === 'right';\n    });\n  });\n  var leftColumns = computed(function () {\n    return groupedColumns.value.filter(function (column) {\n      return column.fixed === 'left' || column.fixed === true;\n    });\n  });\n  var rightColumns = computed(function () {\n    return groupedColumns.value.filter(function (column) {\n      return column.fixed === 'right';\n    });\n  });\n  var leafColumns = computed(function () {\n    return _leafColumns(columns.value);\n  });\n  var leftLeafColumns = computed(function () {\n    return _leafColumns(leftColumns.value);\n  });\n  var rightLeafColumns = computed(function () {\n    return _leafColumns(rightColumns.value);\n  });\n  return {\n    groupedColumns: groupedColumns,\n    isAnyColumnsFixed: isAnyColumnsFixed,\n    isAnyColumnsLeftFixed: isAnyColumnsLeftFixed,\n    isAnyColumnsRightFixed: isAnyColumnsRightFixed,\n    leftColumns: leftColumns,\n    rightColumns: rightColumns,\n    leafColumns: leafColumns,\n    leftLeafColumns: leftLeafColumns,\n    rightLeafColumns: rightLeafColumns\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}