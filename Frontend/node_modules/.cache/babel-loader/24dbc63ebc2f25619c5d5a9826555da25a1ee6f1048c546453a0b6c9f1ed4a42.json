{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { computed, defineComponent, ref, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\nvar Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: {\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      default: 10\n    },\n    renderItem: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String\n  },\n  emits: ['visibleChange'],\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      emit = _ref.emit;\n    var fullySSR = computed(function () {\n      return props.ssr === 'full';\n    });\n    var containerWidth = ref(null);\n    var mergedContainerWidth = computed(function () {\n      return containerWidth.value || 0;\n    });\n    var itemWidths = ref(new Map());\n    var prevRestWidth = ref(0);\n    var restWidth = ref(0);\n    var suffixWidth = ref(0);\n    var suffixFixedStart = ref(null);\n    var displayCount = ref(null);\n    var mergedDisplayCount = computed(function () {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n      return displayCount.value || 0;\n    });\n    var restReady = ref(false);\n    var itemPrefixCls = computed(function () {\n      return \"\".concat(props.prefixCls, \"-item\");\n    }); // Always use the max width to avoid blink\n\n    var mergedRestWidth = computed(function () {\n      return Math.max(prevRestWidth.value, restWidth.value);\n    }); // ================================= Data =================================\n\n    var isResponsive = computed(function () {\n      return !!(props.data.length && props.maxCount === RESPONSIVE);\n    });\n    var invalidate = computed(function () {\n      return props.maxCount === INVALIDATE;\n    });\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n\n    var showRest = computed(function () {\n      return isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount;\n    });\n    var mergedData = computed(function () {\n      var items = props.data;\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n      return items;\n    });\n    var omittedItems = computed(function () {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n      return props.data.slice(mergedData.value.length);\n    }); // ================================= Item =================================\n\n    var getKey = function getKey(item, index) {\n      var _a, _b;\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n      return (_b = props.itemKey && ((_a = item) === null || _a === void 0 ? void 0 : _a[props.itemKey])) !== null && _b !== void 0 ? _b : index;\n    };\n    var mergedRenderItem = computed(function () {\n      return props.renderItem || function (item) {\n        return item;\n      };\n    });\n    var updateDisplayCount = function updateDisplayCount(count, notReady) {\n      displayCount.value = count;\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    }; // ================================= Size =================================\n\n    var onOverflowResize = function onOverflowResize(_, element) {\n      containerWidth.value = element.clientWidth;\n    };\n    var registerSize = function registerSize(key, width) {\n      var clone = new Map(itemWidths.value);\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n      itemWidths.value = clone;\n    };\n    var registerOverflowSize = function registerOverflowSize(_, width) {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n    var registerSuffixSize = function registerSuffixSize(_, width) {\n      suffixWidth.value = width;\n    }; // ================================ Effect ================================\n\n    var getItemWidth = function getItemWidth(index) {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function () {\n      return props.itemKey;\n    }, mergedData], function () {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        var totalWidth = suffixWidth.value;\n        var len = mergedData.value.length;\n        var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n        for (var i = 0; i < len; i += 1) {\n          var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          } // Find best match\n\n          totalWidth += currentItemWidth;\n          if (\n          // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value || i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return function () {\n      // ================================ Render ================================\n      var displayRest = restReady.value && !!omittedItems.value.length;\n      var itemComponent = props.itemComponent,\n        renderRawItem = props.renderRawItem,\n        renderRawRest = props.renderRawRest,\n        renderRest = props.renderRest,\n        _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n        suffix = props.suffix,\n        _props$component = props.component,\n        Component = _props$component === void 0 ? 'div' : _props$component;\n      var className = attrs.class,\n        style = attrs.style,\n        restAttrs = __rest(attrs, [\"class\", \"style\"]);\n      var suffixStyle = {};\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: \"\".concat(suffixFixedStart.value, \"px\"),\n          top: 0\n        };\n      }\n      var itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      }; // >>>>> Choice render fun by `renderRawItem`\n\n      var internalRenderItemNode = renderRawItem ? function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item: item,\n            itemKey: key,\n            registerSize: registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          default: function _default() {\n            return [renderRawItem(item, index)];\n          }\n        });\n      } : function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      }; // >>>>> Rest node\n\n      var restNode;\n      var restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: \"\".concat(itemPrefixCls.value, \"-rest\"),\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n      if (!renderRawRest) {\n        var mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n          default: function _default() {\n            return [typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest];\n          }\n        });\n      } else if (renderRawRest) {\n        restNode = _createVNode(OverflowContextProvider, {\n          \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n        }, {\n          default: function _default() {\n            return [renderRawRest(omittedItems.value)];\n          }\n        });\n      }\n      var overflowNode = _createVNode(Component, _objectSpread({\n        \"class\": classNames(!invalidate.value && prefixCls, className),\n        \"style\": style\n      }, restAttrs), {\n        default: function _default() {\n          return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n            \"order\": mergedDisplayCount.value,\n            \"class\": \"\".concat(itemPrefixCls.value, \"-suffix\"),\n            \"registerSize\": registerSuffixSize,\n            \"display\": true,\n            \"style\": suffixStyle\n          }), {\n            default: function _default() {\n              return [suffix];\n            }\n          })];\n        }\n      }); // 使用 disabled  避免结构不一致 导致子组件 rerender\n\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        default: function _default() {\n          return [overflowNode];\n        }\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","computed","defineComponent","ref","watch","ResizeObserver","classNames","PropTypes","OverflowContextProvider","Item","RawItem","RESPONSIVE","INVALIDATE","defaultRenderRest","omittedItems","concat","Overflow","name","inheritAttrs","props","prefixCls","String","data","Array","itemKey","Number","Function","itemWidth","type","default","renderItem","renderRawItem","maxCount","renderRest","renderRawRest","suffix","any","component","itemComponent","onVisibleChange","ssr","emits","setup","_ref","attrs","emit","fullySSR","containerWidth","mergedContainerWidth","value","itemWidths","Map","prevRestWidth","restWidth","suffixWidth","suffixFixedStart","displayCount","mergedDisplayCount","MAX_SAFE_INTEGER","restReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","invalidate","showRest","mergedData","items","slice","min","getKey","item","index","_a","_b","mergedRenderItem","updateDisplayCount","count","notReady","onOverflowResize","_","element","clientWidth","registerSize","key","width","clone","delete","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","totalWidth","len","lastIndex","currentItemWidth","undefined","displayRest","_props$prefixCls","_props$component","Component","className","class","style","restAttrs","suffixStyle","position","left","top","itemSharedProps","responsive","internalRenderItemNode","order","display","_default","restNode","restContextProps","mergedRenderRest","overflowNode","map"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/vc-overflow/Overflow.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { computed, defineComponent, ref, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nvar Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: {\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      default: 10\n    },\n    renderItem: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String\n  },\n  emits: ['visibleChange'],\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit;\n    var fullySSR = computed(function () {\n      return props.ssr === 'full';\n    });\n    var containerWidth = ref(null);\n    var mergedContainerWidth = computed(function () {\n      return containerWidth.value || 0;\n    });\n    var itemWidths = ref(new Map());\n    var prevRestWidth = ref(0);\n    var restWidth = ref(0);\n    var suffixWidth = ref(0);\n    var suffixFixedStart = ref(null);\n    var displayCount = ref(null);\n    var mergedDisplayCount = computed(function () {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n\n      return displayCount.value || 0;\n    });\n    var restReady = ref(false);\n    var itemPrefixCls = computed(function () {\n      return \"\".concat(props.prefixCls, \"-item\");\n    }); // Always use the max width to avoid blink\n\n    var mergedRestWidth = computed(function () {\n      return Math.max(prevRestWidth.value, restWidth.value);\n    }); // ================================= Data =================================\n\n    var isResponsive = computed(function () {\n      return !!(props.data.length && props.maxCount === RESPONSIVE);\n    });\n    var invalidate = computed(function () {\n      return props.maxCount === INVALIDATE;\n    });\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n\n    var showRest = computed(function () {\n      return isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount;\n    });\n    var mergedData = computed(function () {\n      var items = props.data;\n\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n\n      return items;\n    });\n    var omittedItems = computed(function () {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n\n      return props.data.slice(mergedData.value.length);\n    }); // ================================= Item =================================\n\n    var getKey = function getKey(item, index) {\n      var _a, _b;\n\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n\n      return (_b = props.itemKey && ((_a = item) === null || _a === void 0 ? void 0 : _a[props.itemKey])) !== null && _b !== void 0 ? _b : index;\n    };\n\n    var mergedRenderItem = computed(function () {\n      return props.renderItem || function (item) {\n        return item;\n      };\n    });\n\n    var updateDisplayCount = function updateDisplayCount(count, notReady) {\n      displayCount.value = count;\n\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    }; // ================================= Size =================================\n\n\n    var onOverflowResize = function onOverflowResize(_, element) {\n      containerWidth.value = element.clientWidth;\n    };\n\n    var registerSize = function registerSize(key, width) {\n      var clone = new Map(itemWidths.value);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      itemWidths.value = clone;\n    };\n\n    var registerOverflowSize = function registerOverflowSize(_, width) {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n\n    var registerSuffixSize = function registerSuffixSize(_, width) {\n      suffixWidth.value = width;\n    }; // ================================ Effect ================================\n\n\n    var getItemWidth = function getItemWidth(index) {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function () {\n      return props.itemKey;\n    }, mergedData], function () {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        var totalWidth = suffixWidth.value;\n        var len = mergedData.value.length;\n        var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          } // Find best match\n\n\n          totalWidth += currentItemWidth;\n\n          if ( // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value || i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return function () {\n      // ================================ Render ================================\n      var displayRest = restReady.value && !!omittedItems.value.length;\n      var itemComponent = props.itemComponent,\n          renderRawItem = props.renderRawItem,\n          renderRawRest = props.renderRawRest,\n          renderRest = props.renderRest,\n          _props$prefixCls = props.prefixCls,\n          prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n          suffix = props.suffix,\n          _props$component = props.component,\n          Component = _props$component === void 0 ? 'div' : _props$component;\n\n      var className = attrs.class,\n          style = attrs.style,\n          restAttrs = __rest(attrs, [\"class\", \"style\"]);\n\n      var suffixStyle = {};\n\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: \"\".concat(suffixFixedStart.value, \"px\"),\n          top: 0\n        };\n      }\n\n      var itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      }; // >>>>> Choice render fun by `renderRawItem`\n\n      var internalRenderItemNode = renderRawItem ? function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item: item,\n            itemKey: key,\n            registerSize: registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          default: function _default() {\n            return [renderRawItem(item, index)];\n          }\n        });\n      } : function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      }; // >>>>> Rest node\n\n      var restNode;\n      var restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: \"\".concat(itemPrefixCls.value, \"-rest\"),\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n\n      if (!renderRawRest) {\n        var mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n          default: function _default() {\n            return [typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest];\n          }\n        });\n      } else if (renderRawRest) {\n        restNode = _createVNode(OverflowContextProvider, {\n          \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n        }, {\n          default: function _default() {\n            return [renderRawRest(omittedItems.value)];\n          }\n        });\n      }\n\n      var overflowNode = _createVNode(Component, _objectSpread({\n        \"class\": classNames(!invalidate.value && prefixCls, className),\n        \"style\": style\n      }, restAttrs), {\n        default: function _default() {\n          return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n            \"order\": mergedDisplayCount.value,\n            \"class\": \"\".concat(itemPrefixCls.value, \"-suffix\"),\n            \"registerSize\": registerSuffixSize,\n            \"display\": true,\n            \"style\": suffixStyle\n          }), {\n            default: function _default() {\n              return [suffix];\n            }\n          })];\n        }\n      }); // 使用 disabled  避免结构不一致 导致子组件 rerender\n\n\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        default: function _default() {\n          return [overflowNode];\n        }\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AAEjD,IAAIC,MAAM,GAAG,IAAI,IAAI,IAAI,CAACA,MAAM,IAAI,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EAEV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE;IACf,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACjF;EAEA,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3I,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAAER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACnG;EACA,OAAOR,CAAC;AACV,CAAC;AAED,SAASW,QAAQ,EAAEC,eAAe,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAC3D,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,uBAAuB,QAAQ,WAAW;AACnD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,IAAIC,UAAU,GAAG,YAAY;AAC7B,IAAIC,UAAU,GAAG,YAAY;AAE7B,SAASC,iBAAiBA,CAACC,YAAY,EAAE;EACvC,OAAO,IAAI,CAACC,MAAM,CAACD,YAAY,CAACf,MAAM,EAAE,MAAM,CAAC;AACjD;AAEA,IAAIiB,QAAQ,GAAGd,eAAe,CAAC;EAC7Be,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,SAAS,EAAEC,MAAM;IACjBC,IAAI,EAAEC,KAAK;IACXC,OAAO,EAAE,CAACH,MAAM,EAAEI,MAAM,EAAEC,QAAQ,CAAC;IAEnC;IACAC,SAAS,EAAE;MACTC,IAAI,EAAEH,MAAM;MACZI,OAAO,EAAE;IACX,CAAC;IACDC,UAAU,EAAEJ,QAAQ;IAEpB;IACAK,aAAa,EAAEL,QAAQ;IACvBM,QAAQ,EAAE,CAACP,MAAM,EAAEJ,MAAM,CAAC;IAC1BY,UAAU,EAAEP,QAAQ;IAEpB;IACAQ,aAAa,EAAER,QAAQ;IACvBS,MAAM,EAAE5B,SAAS,CAAC6B,GAAG;IACrBC,SAAS,EAAEhB,MAAM;IACjBiB,aAAa,EAAE/B,SAAS,CAAC6B,GAAG;IAE5B;IACAG,eAAe,EAAEb,QAAQ;IAEzB;IACAc,GAAG,EAAEnB;EACP,CAAC;EACDoB,KAAK,EAAE,CAAC,eAAe,CAAC;EACxBC,KAAK,EAAE,SAASA,KAAKA,CAACvB,KAAK,EAAEwB,IAAI,EAAE;IACjC,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;MAClBC,IAAI,GAAGF,IAAI,CAACE,IAAI;IACpB,IAAIC,QAAQ,GAAG7C,QAAQ,CAAC,YAAY;MAClC,OAAOkB,KAAK,CAACqB,GAAG,KAAK,MAAM;IAC7B,CAAC,CAAC;IACF,IAAIO,cAAc,GAAG5C,GAAG,CAAC,IAAI,CAAC;IAC9B,IAAI6C,oBAAoB,GAAG/C,QAAQ,CAAC,YAAY;MAC9C,OAAO8C,cAAc,CAACE,KAAK,IAAI,CAAC;IAClC,CAAC,CAAC;IACF,IAAIC,UAAU,GAAG/C,GAAG,CAAC,IAAIgD,GAAG,CAAC,CAAC,CAAC;IAC/B,IAAIC,aAAa,GAAGjD,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAIkD,SAAS,GAAGlD,GAAG,CAAC,CAAC,CAAC;IACtB,IAAImD,WAAW,GAAGnD,GAAG,CAAC,CAAC,CAAC;IACxB,IAAIoD,gBAAgB,GAAGpD,GAAG,CAAC,IAAI,CAAC;IAChC,IAAIqD,YAAY,GAAGrD,GAAG,CAAC,IAAI,CAAC;IAC5B,IAAIsD,kBAAkB,GAAGxD,QAAQ,CAAC,YAAY;MAC5C,IAAIuD,YAAY,CAACP,KAAK,KAAK,IAAI,IAAIH,QAAQ,CAACG,KAAK,EAAE;QACjD,OAAOxB,MAAM,CAACiC,gBAAgB;MAChC;MAEA,OAAOF,YAAY,CAACP,KAAK,IAAI,CAAC;IAChC,CAAC,CAAC;IACF,IAAIU,SAAS,GAAGxD,GAAG,CAAC,KAAK,CAAC;IAC1B,IAAIyD,aAAa,GAAG3D,QAAQ,CAAC,YAAY;MACvC,OAAO,EAAE,CAACc,MAAM,CAACI,KAAK,CAACC,SAAS,EAAE,OAAO,CAAC;IAC5C,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIyC,eAAe,GAAG5D,QAAQ,CAAC,YAAY;MACzC,OAAO6D,IAAI,CAACC,GAAG,CAACX,aAAa,CAACH,KAAK,EAAEI,SAAS,CAACJ,KAAK,CAAC;IACvD,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIe,YAAY,GAAG/D,QAAQ,CAAC,YAAY;MACtC,OAAO,CAAC,EAAEkB,KAAK,CAACG,IAAI,CAACvB,MAAM,IAAIoB,KAAK,CAACa,QAAQ,KAAKrB,UAAU,CAAC;IAC/D,CAAC,CAAC;IACF,IAAIsD,UAAU,GAAGhE,QAAQ,CAAC,YAAY;MACpC,OAAOkB,KAAK,CAACa,QAAQ,KAAKpB,UAAU;IACtC,CAAC,CAAC;IACF;AACJ;AACA;;IAEI,IAAIsD,QAAQ,GAAGjE,QAAQ,CAAC,YAAY;MAClC,OAAO+D,YAAY,CAACf,KAAK,IAAI,OAAO9B,KAAK,CAACa,QAAQ,KAAK,QAAQ,IAAIb,KAAK,CAACG,IAAI,CAACvB,MAAM,GAAGoB,KAAK,CAACa,QAAQ;IACvG,CAAC,CAAC;IACF,IAAImC,UAAU,GAAGlE,QAAQ,CAAC,YAAY;MACpC,IAAImE,KAAK,GAAGjD,KAAK,CAACG,IAAI;MAEtB,IAAI0C,YAAY,CAACf,KAAK,EAAE;QACtB,IAAIF,cAAc,CAACE,KAAK,KAAK,IAAI,IAAIH,QAAQ,CAACG,KAAK,EAAE;UACnDmB,KAAK,GAAGjD,KAAK,CAACG,IAAI;QACpB,CAAC,MAAM;UACL8C,KAAK,GAAGjD,KAAK,CAACG,IAAI,CAAC+C,KAAK,CAAC,CAAC,EAAEP,IAAI,CAACQ,GAAG,CAACnD,KAAK,CAACG,IAAI,CAACvB,MAAM,EAAEiD,oBAAoB,CAACC,KAAK,GAAG9B,KAAK,CAACQ,SAAS,CAAC,CAAC;QACxG;MACF,CAAC,MAAM,IAAI,OAAOR,KAAK,CAACa,QAAQ,KAAK,QAAQ,EAAE;QAC7CoC,KAAK,GAAGjD,KAAK,CAACG,IAAI,CAAC+C,KAAK,CAAC,CAAC,EAAElD,KAAK,CAACa,QAAQ,CAAC;MAC7C;MAEA,OAAOoC,KAAK;IACd,CAAC,CAAC;IACF,IAAItD,YAAY,GAAGb,QAAQ,CAAC,YAAY;MACtC,IAAI+D,YAAY,CAACf,KAAK,EAAE;QACtB,OAAO9B,KAAK,CAACG,IAAI,CAAC+C,KAAK,CAACZ,kBAAkB,CAACR,KAAK,GAAG,CAAC,CAAC;MACvD;MAEA,OAAO9B,KAAK,CAACG,IAAI,CAAC+C,KAAK,CAACF,UAAU,CAAClB,KAAK,CAAClD,MAAM,CAAC;IAClD,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIwE,MAAM,GAAG,SAASA,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;MACxC,IAAIC,EAAE,EAAEC,EAAE;MAEV,IAAI,OAAOxD,KAAK,CAACK,OAAO,KAAK,UAAU,EAAE;QACvC,OAAOL,KAAK,CAACK,OAAO,CAACgD,IAAI,CAAC;MAC5B;MAEA,OAAO,CAACG,EAAE,GAAGxD,KAAK,CAACK,OAAO,KAAK,CAACkD,EAAE,GAAGF,IAAI,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACvD,KAAK,CAACK,OAAO,CAAC,CAAC,MAAM,IAAI,IAAImD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGF,KAAK;IAC5I,CAAC;IAED,IAAIG,gBAAgB,GAAG3E,QAAQ,CAAC,YAAY;MAC1C,OAAOkB,KAAK,CAACW,UAAU,IAAI,UAAU0C,IAAI,EAAE;QACzC,OAAOA,IAAI;MACb,CAAC;IACH,CAAC,CAAC;IAEF,IAAIK,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MACpEvB,YAAY,CAACP,KAAK,GAAG6B,KAAK;MAE1B,IAAI,CAACC,QAAQ,EAAE;QACbpB,SAAS,CAACV,KAAK,GAAG6B,KAAK,GAAG3D,KAAK,CAACG,IAAI,CAACvB,MAAM,GAAG,CAAC;QAC/C8C,IAAI,CAAC,eAAe,EAAEiC,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC,CAAC;;IAGH,IAAIE,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,CAAC,EAAEC,OAAO,EAAE;MAC3DnC,cAAc,CAACE,KAAK,GAAGiC,OAAO,CAACC,WAAW;IAC5C,CAAC;IAED,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAACC,GAAG,EAAEC,KAAK,EAAE;MACnD,IAAIC,KAAK,GAAG,IAAIpC,GAAG,CAACD,UAAU,CAACD,KAAK,CAAC;MAErC,IAAIqC,KAAK,KAAK,IAAI,EAAE;QAClBC,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC;MACnB,CAAC,MAAM;QACLE,KAAK,CAACE,GAAG,CAACJ,GAAG,EAAEC,KAAK,CAAC;MACvB;MAEApC,UAAU,CAACD,KAAK,GAAGsC,KAAK;IAC1B,CAAC;IAED,IAAIG,oBAAoB,GAAG,SAASA,oBAAoBA,CAACT,CAAC,EAAEK,KAAK,EAAE;MACjElC,aAAa,CAACH,KAAK,GAAGI,SAAS,CAACJ,KAAK;MACrCI,SAAS,CAACJ,KAAK,GAAGqC,KAAK;IACzB,CAAC;IAED,IAAIK,kBAAkB,GAAG,SAASA,kBAAkBA,CAACV,CAAC,EAAEK,KAAK,EAAE;MAC7DhC,WAAW,CAACL,KAAK,GAAGqC,KAAK;IAC3B,CAAC,CAAC,CAAC;;IAGH,IAAIM,YAAY,GAAG,SAASA,YAAYA,CAACnB,KAAK,EAAE;MAC9C,OAAOvB,UAAU,CAACD,KAAK,CAAC4C,GAAG,CAACtB,MAAM,CAACJ,UAAU,CAAClB,KAAK,CAACwB,KAAK,CAAC,EAAEA,KAAK,CAAC,CAAC;IACrE,CAAC;IAEDrE,KAAK,CAAC,CAAC4C,oBAAoB,EAAEE,UAAU,EAAEG,SAAS,EAAEC,WAAW,EAAE,YAAY;MAC3E,OAAOnC,KAAK,CAACK,OAAO;IACtB,CAAC,EAAE2C,UAAU,CAAC,EAAE,YAAY;MAC1B,IAAInB,oBAAoB,CAACC,KAAK,IAAIY,eAAe,CAACZ,KAAK,IAAIkB,UAAU,CAAClB,KAAK,EAAE;QAC3E,IAAI6C,UAAU,GAAGxC,WAAW,CAACL,KAAK;QAClC,IAAI8C,GAAG,GAAG5B,UAAU,CAAClB,KAAK,CAAClD,MAAM;QACjC,IAAIiG,SAAS,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC;;QAEzB,IAAI,CAACA,GAAG,EAAE;UACRlB,kBAAkB,CAAC,CAAC,CAAC;UACrBtB,gBAAgB,CAACN,KAAK,GAAG,IAAI;UAC7B;QACF;QAEA,KAAK,IAAInD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiG,GAAG,EAAEjG,CAAC,IAAI,CAAC,EAAE;UAC/B,IAAImG,gBAAgB,GAAGL,YAAY,CAAC9F,CAAC,CAAC,CAAC,CAAC;;UAExC,IAAImG,gBAAgB,KAAKC,SAAS,EAAE;YAClCrB,kBAAkB,CAAC/E,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;YAC/B;UACF,CAAC,CAAC;;UAGFgG,UAAU,IAAIG,gBAAgB;UAE9B;UAAK;UACLD,SAAS,KAAK,CAAC,IAAIF,UAAU,IAAI9C,oBAAoB,CAACC,KAAK,IAAInD,CAAC,KAAKkG,SAAS,GAAG,CAAC,IAAIF,UAAU,GAAGF,YAAY,CAACI,SAAS,CAAC,IAAIhD,oBAAoB,CAACC,KAAK,EAAE;YACxJ;YACA4B,kBAAkB,CAACmB,SAAS,CAAC;YAC7BzC,gBAAgB,CAACN,KAAK,GAAG,IAAI;YAC7B;UACF,CAAC,MAAM,IAAI6C,UAAU,GAAGjC,eAAe,CAACZ,KAAK,GAAGD,oBAAoB,CAACC,KAAK,EAAE;YAC1E;YACA4B,kBAAkB,CAAC/E,CAAC,GAAG,CAAC,CAAC;YACzByD,gBAAgB,CAACN,KAAK,GAAG6C,UAAU,GAAGG,gBAAgB,GAAG3C,WAAW,CAACL,KAAK,GAAGI,SAAS,CAACJ,KAAK;YAC5F;UACF;QACF;QAEA,IAAI9B,KAAK,CAACgB,MAAM,IAAIyD,YAAY,CAAC,CAAC,CAAC,GAAGtC,WAAW,CAACL,KAAK,GAAGD,oBAAoB,CAACC,KAAK,EAAE;UACpFM,gBAAgB,CAACN,KAAK,GAAG,IAAI;QAC/B;MACF;IACF,CAAC,CAAC;IACF,OAAO,YAAY;MACjB;MACA,IAAIkD,WAAW,GAAGxC,SAAS,CAACV,KAAK,IAAI,CAAC,CAACnC,YAAY,CAACmC,KAAK,CAAClD,MAAM;MAChE,IAAIuC,aAAa,GAAGnB,KAAK,CAACmB,aAAa;QACnCP,aAAa,GAAGZ,KAAK,CAACY,aAAa;QACnCG,aAAa,GAAGf,KAAK,CAACe,aAAa;QACnCD,UAAU,GAAGd,KAAK,CAACc,UAAU;QAC7BmE,gBAAgB,GAAGjF,KAAK,CAACC,SAAS;QAClCA,SAAS,GAAGgF,gBAAgB,KAAK,KAAK,CAAC,GAAG,aAAa,GAAGA,gBAAgB;QAC1EjE,MAAM,GAAGhB,KAAK,CAACgB,MAAM;QACrBkE,gBAAgB,GAAGlF,KAAK,CAACkB,SAAS;QAClCiE,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,gBAAgB;MAEtE,IAAIE,SAAS,GAAG3D,KAAK,CAAC4D,KAAK;QACvBC,KAAK,GAAG7D,KAAK,CAAC6D,KAAK;QACnBC,SAAS,GAAGvH,MAAM,CAACyD,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;MAEjD,IAAI+D,WAAW,GAAG,CAAC,CAAC;MAEpB,IAAIpD,gBAAgB,CAACN,KAAK,KAAK,IAAI,IAAIe,YAAY,CAACf,KAAK,EAAE;QACzD0D,WAAW,GAAG;UACZC,QAAQ,EAAE,UAAU;UACpBC,IAAI,EAAE,EAAE,CAAC9F,MAAM,CAACwC,gBAAgB,CAACN,KAAK,EAAE,IAAI,CAAC;UAC7C6D,GAAG,EAAE;QACP,CAAC;MACH;MAEA,IAAIC,eAAe,GAAG;QACpB3F,SAAS,EAAEwC,aAAa,CAACX,KAAK;QAC9B+D,UAAU,EAAEhD,YAAY,CAACf,KAAK;QAC9BZ,SAAS,EAAEC,aAAa;QACxB2B,UAAU,EAAEA,UAAU,CAAChB;MACzB,CAAC,CAAC,CAAC;;MAEH,IAAIgE,sBAAsB,GAAGlF,aAAa,GAAG,UAAUyC,IAAI,EAAEC,KAAK,EAAE;QAClE,IAAIY,GAAG,GAAGd,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC;QAC7B,OAAOvF,YAAY,CAACsB,uBAAuB,EAAE;UAC3C,KAAK,EAAE6E,GAAG;UACV,OAAO,EAAErG,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+H,eAAe,CAAC,EAAE;YAC/CG,KAAK,EAAEzC,KAAK;YACZD,IAAI,EAAEA,IAAI;YACVhD,OAAO,EAAE6D,GAAG;YACZD,YAAY,EAAEA,YAAY;YAC1B+B,OAAO,EAAE1C,KAAK,IAAIhB,kBAAkB,CAACR;UACvC,CAAC;QACH,CAAC,EAAE;UACDpB,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;YAC3B,OAAO,CAACrF,aAAa,CAACyC,IAAI,EAAEC,KAAK,CAAC,CAAC;UACrC;QACF,CAAC,CAAC;MACJ,CAAC,GAAG,UAAUD,IAAI,EAAEC,KAAK,EAAE;QACzB,IAAIY,GAAG,GAAGd,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC;QAC7B,OAAOvF,YAAY,CAACuB,IAAI,EAAE1B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEgI,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE;UAC9E,OAAO,EAAEtC,KAAK;UACd,KAAK,EAAEY,GAAG;UACV,MAAM,EAAEb,IAAI;UACZ,YAAY,EAAEI,gBAAgB,CAAC3B,KAAK;UACpC,SAAS,EAAEoC,GAAG;UACd,cAAc,EAAED,YAAY;UAC5B,SAAS,EAAEX,KAAK,IAAIhB,kBAAkB,CAACR;QACzC,CAAC,CAAC,EAAE,IAAI,CAAC;MACX,CAAC,CAAC,CAAC;;MAEH,IAAIoE,QAAQ;MACZ,IAAIC,gBAAgB,GAAG;QACrBJ,KAAK,EAAEf,WAAW,GAAG1C,kBAAkB,CAACR,KAAK,GAAGxB,MAAM,CAACiC,gBAAgB;QACvE6C,SAAS,EAAE,EAAE,CAACxF,MAAM,CAAC6C,aAAa,CAACX,KAAK,EAAE,OAAO,CAAC;QAClDmC,YAAY,EAAEM,oBAAoB;QAClCyB,OAAO,EAAEhB;MACX,CAAC;MAED,IAAI,CAACjE,aAAa,EAAE;QAClB,IAAIqF,gBAAgB,GAAGtF,UAAU,IAAIpB,iBAAiB;QACtDwG,QAAQ,GAAGnI,YAAY,CAACuB,IAAI,EAAE1B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEgI,eAAe,CAAC,EAAEO,gBAAgB,CAAC,EAAE;UACjGzF,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;YAC3B,OAAO,CAAC,OAAOG,gBAAgB,KAAK,UAAU,GAAGA,gBAAgB,CAACzG,YAAY,CAACmC,KAAK,CAAC,GAAGsE,gBAAgB,CAAC;UAC3G;QACF,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIrF,aAAa,EAAE;QACxBmF,QAAQ,GAAGnI,YAAY,CAACsB,uBAAuB,EAAE;UAC/C,OAAO,EAAExB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+H,eAAe,CAAC,EAAEO,gBAAgB;QACnE,CAAC,EAAE;UACDzF,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;YAC3B,OAAO,CAAClF,aAAa,CAACpB,YAAY,CAACmC,KAAK,CAAC,CAAC;UAC5C;QACF,CAAC,CAAC;MACJ;MAEA,IAAIuE,YAAY,GAAGtI,YAAY,CAACoH,SAAS,EAAEvH,aAAa,CAAC;QACvD,OAAO,EAAEuB,UAAU,CAAC,CAAC2D,UAAU,CAAChB,KAAK,IAAI7B,SAAS,EAAEmF,SAAS,CAAC;QAC9D,OAAO,EAAEE;MACX,CAAC,EAAEC,SAAS,CAAC,EAAE;QACb7E,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;UAC3B,OAAO,CAACjD,UAAU,CAAClB,KAAK,CAACwE,GAAG,CAACR,sBAAsB,CAAC,EAAE/C,QAAQ,CAACjB,KAAK,GAAGoE,QAAQ,GAAG,IAAI,EAAElF,MAAM,IAAIjD,YAAY,CAACuB,IAAI,EAAE1B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEgI,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE;YACzK,OAAO,EAAEtD,kBAAkB,CAACR,KAAK;YACjC,OAAO,EAAE,EAAE,CAAClC,MAAM,CAAC6C,aAAa,CAACX,KAAK,EAAE,SAAS,CAAC;YAClD,cAAc,EAAE0C,kBAAkB;YAClC,SAAS,EAAE,IAAI;YACf,OAAO,EAAEgB;UACX,CAAC,CAAC,EAAE;YACF9E,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;cAC3B,OAAO,CAACjF,MAAM,CAAC;YACjB;UACF,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC,CAAC,CAAC;;MAGJ,OAAOjD,YAAY,CAACmB,cAAc,EAAE;QAClC,UAAU,EAAE,CAAC2D,YAAY,CAACf,KAAK;QAC/B,UAAU,EAAE+B;MACd,CAAC,EAAE;QACDnD,OAAO,EAAE,SAASuF,QAAQA,CAAA,EAAG;UAC3B,OAAO,CAACI,YAAY,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;EACH;AACF,CAAC,CAAC;AACFxG,QAAQ,CAACP,IAAI,GAAGC,OAAO;AACvBM,QAAQ,CAACL,UAAU,GAAGA,UAAU;AAChCK,QAAQ,CAACJ,UAAU,GAAGA,UAAU;AAChC,eAAeI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}