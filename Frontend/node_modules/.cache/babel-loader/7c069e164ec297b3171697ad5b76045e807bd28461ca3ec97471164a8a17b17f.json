{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport Col from '../grid/Col';\nimport { useInjectForm } from './context';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport classNames from '../_util/classNames';\nimport Tooltip from '../tooltip';\nimport QuestionCircleOutlined from \"@ant-design/icons-vue/es/icons/QuestionCircleOutlined\";\nconst FormItemLabel = (props, _ref) => {\n  let {\n    slots,\n    emit,\n    attrs\n  } = _ref;\n  var _a, _b, _c, _d, _e;\n  const {\n    prefixCls,\n    htmlFor,\n    labelCol,\n    labelAlign,\n    colon,\n    required,\n    requiredMark\n  } = _extends(_extends({}, props), attrs);\n  const [formLocale] = useLocaleReceiver('Form');\n  const label = (_a = props.label) !== null && _a !== void 0 ? _a : (_b = slots.label) === null || _b === void 0 ? void 0 : _b.call(slots);\n  if (!label) return null;\n  const {\n    vertical,\n    labelAlign: contextLabelAlign,\n    labelCol: contextLabelCol,\n    labelWrap,\n    colon: contextColon\n  } = useInjectForm();\n  const mergedLabelCol = labelCol || (contextLabelCol === null || contextLabelCol === void 0 ? void 0 : contextLabelCol.value) || {};\n  const mergedLabelAlign = labelAlign || (contextLabelAlign === null || contextLabelAlign === void 0 ? void 0 : contextLabelAlign.value);\n  const labelClsBasic = `${prefixCls}-item-label`;\n  const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.class, {\n    [`${labelClsBasic}-wrap`]: !!labelWrap.value\n  });\n  let labelChildren = label;\n  // Keep label is original where there should have no colon\n  const computedColon = colon === true || (contextColon === null || contextColon === void 0 ? void 0 : contextColon.value) !== false && colon !== false;\n  const haveColon = computedColon && !vertical.value;\n  // Remove duplicated user input colon\n  if (haveColon && typeof label === 'string' && label.trim() !== '') {\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\n  }\n  // Tooltip\n  if (props.tooltip || slots.tooltip) {\n    const tooltipNode = _createVNode(\"span\", {\n      \"class\": `${prefixCls}-item-tooltip`\n    }, [_createVNode(Tooltip, {\n      \"title\": props.tooltip\n    }, {\n      default: () => [_createVNode(QuestionCircleOutlined, null, null)]\n    })]);\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, slots.tooltip ? (_c = slots.tooltip) === null || _c === void 0 ? void 0 : _c.call(slots, {\n      class: `${prefixCls}-item-tooltip`\n    }) : tooltipNode]);\n  }\n  // Add required mark if optional\n  if (requiredMark === 'optional' && !required) {\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, _createVNode(\"span\", {\n      \"class\": `${prefixCls}-item-optional`\n    }, [((_d = formLocale.value) === null || _d === void 0 ? void 0 : _d.optional) || ((_e = defaultLocale.Form) === null || _e === void 0 ? void 0 : _e.optional)])]);\n  }\n  const labelClassName = classNames({\n    [`${prefixCls}-item-required`]: required,\n    [`${prefixCls}-item-required-mark-optional`]: requiredMark === 'optional',\n    [`${prefixCls}-item-no-colon`]: !computedColon\n  });\n  return _createVNode(Col, _objectSpread(_objectSpread({}, mergedLabelCol), {}, {\n    \"class\": labelColClassName\n  }), {\n    default: () => [_createVNode(\"label\", {\n      \"for\": htmlFor,\n      \"class\": labelClassName,\n      \"title\": typeof label === 'string' ? label : '',\n      \"onClick\": e => emit('click', e)\n    }, [labelChildren])]\n  });\n};\nFormItemLabel.displayName = 'FormItemLabel';\nFormItemLabel.inheritAttrs = false;\nexport default FormItemLabel;","map":{"version":3,"names":["_objectSpread","_extends","Fragment","_Fragment","createVNode","_createVNode","Col","useInjectForm","useLocaleReceiver","defaultLocale","classNames","Tooltip","QuestionCircleOutlined","FormItemLabel","props","_ref","slots","emit","attrs","_a","_b","_c","_d","_e","prefixCls","htmlFor","labelCol","labelAlign","colon","required","requiredMark","formLocale","label","call","vertical","contextLabelAlign","contextLabelCol","labelWrap","contextColon","mergedLabelCol","value","mergedLabelAlign","labelClsBasic","labelColClassName","class","labelChildren","computedColon","haveColon","trim","replace","tooltip","tooltipNode","default","optional","Form","labelClassName","e","displayName","inheritAttrs"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/form/FormItemLabel.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport Col from '../grid/Col';\nimport { useInjectForm } from './context';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport classNames from '../_util/classNames';\nimport Tooltip from '../tooltip';\nimport QuestionCircleOutlined from \"@ant-design/icons-vue/es/icons/QuestionCircleOutlined\";\nconst FormItemLabel = (props, _ref) => {\n  let {\n    slots,\n    emit,\n    attrs\n  } = _ref;\n  var _a, _b, _c, _d, _e;\n  const {\n    prefixCls,\n    htmlFor,\n    labelCol,\n    labelAlign,\n    colon,\n    required,\n    requiredMark\n  } = _extends(_extends({}, props), attrs);\n  const [formLocale] = useLocaleReceiver('Form');\n  const label = (_a = props.label) !== null && _a !== void 0 ? _a : (_b = slots.label) === null || _b === void 0 ? void 0 : _b.call(slots);\n  if (!label) return null;\n  const {\n    vertical,\n    labelAlign: contextLabelAlign,\n    labelCol: contextLabelCol,\n    labelWrap,\n    colon: contextColon\n  } = useInjectForm();\n  const mergedLabelCol = labelCol || (contextLabelCol === null || contextLabelCol === void 0 ? void 0 : contextLabelCol.value) || {};\n  const mergedLabelAlign = labelAlign || (contextLabelAlign === null || contextLabelAlign === void 0 ? void 0 : contextLabelAlign.value);\n  const labelClsBasic = `${prefixCls}-item-label`;\n  const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.class, {\n    [`${labelClsBasic}-wrap`]: !!labelWrap.value\n  });\n  let labelChildren = label;\n  // Keep label is original where there should have no colon\n  const computedColon = colon === true || (contextColon === null || contextColon === void 0 ? void 0 : contextColon.value) !== false && colon !== false;\n  const haveColon = computedColon && !vertical.value;\n  // Remove duplicated user input colon\n  if (haveColon && typeof label === 'string' && label.trim() !== '') {\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\n  }\n  // Tooltip\n  if (props.tooltip || slots.tooltip) {\n    const tooltipNode = _createVNode(\"span\", {\n      \"class\": `${prefixCls}-item-tooltip`\n    }, [_createVNode(Tooltip, {\n      \"title\": props.tooltip\n    }, {\n      default: () => [_createVNode(QuestionCircleOutlined, null, null)]\n    })]);\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, slots.tooltip ? (_c = slots.tooltip) === null || _c === void 0 ? void 0 : _c.call(slots, {\n      class: `${prefixCls}-item-tooltip`\n    }) : tooltipNode]);\n  }\n  // Add required mark if optional\n  if (requiredMark === 'optional' && !required) {\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, _createVNode(\"span\", {\n      \"class\": `${prefixCls}-item-optional`\n    }, [((_d = formLocale.value) === null || _d === void 0 ? void 0 : _d.optional) || ((_e = defaultLocale.Form) === null || _e === void 0 ? void 0 : _e.optional)])]);\n  }\n  const labelClassName = classNames({\n    [`${prefixCls}-item-required`]: required,\n    [`${prefixCls}-item-required-mark-optional`]: requiredMark === 'optional',\n    [`${prefixCls}-item-no-colon`]: !computedColon\n  });\n  return _createVNode(Col, _objectSpread(_objectSpread({}, mergedLabelCol), {}, {\n    \"class\": labelColClassName\n  }), {\n    default: () => [_createVNode(\"label\", {\n      \"for\": htmlFor,\n      \"class\": labelClassName,\n      \"title\": typeof label === 'string' ? label : '',\n      \"onClick\": e => emit('click', e)\n    }, [labelChildren])]\n  });\n};\nFormItemLabel.displayName = 'FormItemLabel';\nFormItemLabel.inheritAttrs = false;\nexport default FormItemLabel;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,QAAQ,IAAIC,SAAS,EAAEC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACxE,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,sBAAsB,MAAM,uDAAuD;AAC1F,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EACrC,IAAI;IACFC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC,GAAGH,IAAI;EACR,IAAII,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACtB,MAAM;IACJC,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,UAAU;IACVC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAG7B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,CAAC,EAAEI,KAAK,CAAC;EACxC,MAAM,CAACa,UAAU,CAAC,GAAGvB,iBAAiB,CAAC,MAAM,CAAC;EAC9C,MAAMwB,KAAK,GAAG,CAACb,EAAE,GAAGL,KAAK,CAACkB,KAAK,MAAM,IAAI,IAAIb,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAACC,EAAE,GAAGJ,KAAK,CAACgB,KAAK,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACa,IAAI,CAACjB,KAAK,CAAC;EACxI,IAAI,CAACgB,KAAK,EAAE,OAAO,IAAI;EACvB,MAAM;IACJE,QAAQ;IACRP,UAAU,EAAEQ,iBAAiB;IAC7BT,QAAQ,EAAEU,eAAe;IACzBC,SAAS;IACTT,KAAK,EAAEU;EACT,CAAC,GAAG/B,aAAa,CAAC,CAAC;EACnB,MAAMgC,cAAc,GAAGb,QAAQ,KAAKU,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACI,KAAK,CAAC,IAAI,CAAC,CAAC;EAClI,MAAMC,gBAAgB,GAAGd,UAAU,KAAKQ,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACK,KAAK,CAAC;EACtI,MAAME,aAAa,GAAI,GAAElB,SAAU,aAAY;EAC/C,MAAMmB,iBAAiB,GAAGjC,UAAU,CAACgC,aAAa,EAAED,gBAAgB,KAAK,MAAM,IAAK,GAAEC,aAAc,OAAM,EAAEH,cAAc,CAACK,KAAK,EAAE;IAChI,CAAE,GAAEF,aAAc,OAAM,GAAG,CAAC,CAACL,SAAS,CAACG;EACzC,CAAC,CAAC;EACF,IAAIK,aAAa,GAAGb,KAAK;EACzB;EACA,MAAMc,aAAa,GAAGlB,KAAK,KAAK,IAAI,IAAI,CAACU,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,KAAK,MAAM,KAAK,IAAIZ,KAAK,KAAK,KAAK;EACrJ,MAAMmB,SAAS,GAAGD,aAAa,IAAI,CAACZ,QAAQ,CAACM,KAAK;EAClD;EACA,IAAIO,SAAS,IAAI,OAAOf,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjEH,aAAa,GAAGb,KAAK,CAACiB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;EAChD;EACA;EACA,IAAInC,KAAK,CAACoC,OAAO,IAAIlC,KAAK,CAACkC,OAAO,EAAE;IAClC,MAAMC,WAAW,GAAG9C,YAAY,CAAC,MAAM,EAAE;MACvC,OAAO,EAAG,GAAEmB,SAAU;IACxB,CAAC,EAAE,CAACnB,YAAY,CAACM,OAAO,EAAE;MACxB,OAAO,EAAEG,KAAK,CAACoC;IACjB,CAAC,EAAE;MACDE,OAAO,EAAEA,CAAA,KAAM,CAAC/C,YAAY,CAACO,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC;IAClE,CAAC,CAAC,CAAC,CAAC;IACJiC,aAAa,GAAGxC,YAAY,CAACF,SAAS,EAAE,IAAI,EAAE,CAAC0C,aAAa,EAAE7B,KAAK,CAACkC,OAAO,GAAG,CAAC7B,EAAE,GAAGL,KAAK,CAACkC,OAAO,MAAM,IAAI,IAAI7B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,IAAI,CAACjB,KAAK,EAAE;MACrJ4B,KAAK,EAAG,GAAEpB,SAAU;IACtB,CAAC,CAAC,GAAG2B,WAAW,CAAC,CAAC;EACpB;EACA;EACA,IAAIrB,YAAY,KAAK,UAAU,IAAI,CAACD,QAAQ,EAAE;IAC5CgB,aAAa,GAAGxC,YAAY,CAACF,SAAS,EAAE,IAAI,EAAE,CAAC0C,aAAa,EAAExC,YAAY,CAAC,MAAM,EAAE;MACjF,OAAO,EAAG,GAAEmB,SAAU;IACxB,CAAC,EAAE,CAAC,CAAC,CAACF,EAAE,GAAGS,UAAU,CAACS,KAAK,MAAM,IAAI,IAAIlB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+B,QAAQ,MAAM,CAAC9B,EAAE,GAAGd,aAAa,CAAC6C,IAAI,MAAM,IAAI,IAAI/B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACpK;EACA,MAAME,cAAc,GAAG7C,UAAU,CAAC;IAChC,CAAE,GAAEc,SAAU,gBAAe,GAAGK,QAAQ;IACxC,CAAE,GAAEL,SAAU,8BAA6B,GAAGM,YAAY,KAAK,UAAU;IACzE,CAAE,GAAEN,SAAU,gBAAe,GAAG,CAACsB;EACnC,CAAC,CAAC;EACF,OAAOzC,YAAY,CAACC,GAAG,EAAEN,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEuC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE;IAC5E,OAAO,EAAEI;EACX,CAAC,CAAC,EAAE;IACFS,OAAO,EAAEA,CAAA,KAAM,CAAC/C,YAAY,CAAC,OAAO,EAAE;MACpC,KAAK,EAAEoB,OAAO;MACd,OAAO,EAAE8B,cAAc;MACvB,OAAO,EAAE,OAAOvB,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAE;MAC/C,SAAS,EAAEwB,CAAC,IAAIvC,IAAI,CAAC,OAAO,EAAEuC,CAAC;IACjC,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EACrB,CAAC,CAAC;AACJ,CAAC;AACDhC,aAAa,CAAC4C,WAAW,GAAG,eAAe;AAC3C5C,aAAa,CAAC6C,YAAY,GAAG,KAAK;AAClC,eAAe7C,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}