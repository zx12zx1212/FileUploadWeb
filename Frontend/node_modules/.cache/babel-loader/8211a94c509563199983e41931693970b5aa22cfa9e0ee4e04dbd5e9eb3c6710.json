{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Fragment as _Fragment, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Editable from './Editable';\nimport measure from './util';\nimport Typography from './Typography';\nimport ResizeObserver from '../vc-resize-observer';\nimport Tooltip from '../tooltip';\nimport copy from '../_util/copy-to-clipboard';\nimport CheckOutlined from \"@ant-design/icons-vue/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons-vue/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons-vue/es/icons/EditOutlined\";\nimport { defineComponent, reactive, ref, onMounted, onBeforeUnmount, watch, watchEffect, nextTick, computed, toRaw } from 'vue';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport omit from '../_util/omit';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport { findDOMNode } from '../_util/props-util';\nconst isLineClampSupport = isStyleSupport('webkitLineClamp');\nconst isTextOverflowSupport = isStyleSupport('textOverflow');\nconst ELLIPSIS_STR = '...';\nexport const baseProps = () => ({\n  editable: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  copyable: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  prefixCls: String,\n  component: String,\n  type: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  ellipsis: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  code: {\n    type: Boolean,\n    default: undefined\n  },\n  mark: {\n    type: Boolean,\n    default: undefined\n  },\n  underline: {\n    type: Boolean,\n    default: undefined\n  },\n  delete: {\n    type: Boolean,\n    default: undefined\n  },\n  strong: {\n    type: Boolean,\n    default: undefined\n  },\n  keyboard: {\n    type: Boolean,\n    default: undefined\n  },\n  content: String,\n  'onUpdate:content': Function\n});\nconst Base = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'TypographyBase',\n  inheritAttrs: false,\n  props: baseProps(),\n  // emits: ['update:content'],\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit\n    } = _ref;\n    const {\n      prefixCls,\n      direction\n    } = useConfigInject('typography', props);\n    const state = reactive({\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false,\n      //locale\n      expandStr: '',\n      copyStr: '',\n      copiedStr: '',\n      editStr: '',\n      copyId: undefined,\n      rafId: undefined,\n      prevProps: undefined,\n      originContent: ''\n    });\n    const contentRef = ref();\n    const editIcon = ref();\n    const ellipsis = computed(() => {\n      const ellipsis = props.ellipsis;\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, typeof ellipsis === 'object' ? ellipsis : null);\n    });\n    onMounted(() => {\n      state.clientRendered = true;\n      syncEllipsis();\n    });\n    onBeforeUnmount(() => {\n      clearTimeout(state.copyId);\n      raf.cancel(state.rafId);\n    });\n    watch([() => ellipsis.value.rows, () => props.content], () => {\n      nextTick(() => {\n        resizeOnNextFrame();\n      });\n    }, {\n      flush: 'post',\n      deep: true\n    });\n    watchEffect(() => {\n      if (props.content === undefined) {\n        warning(!props.editable, 'Typography', 'When `editable` is enabled, please use `content` instead of children');\n        warning(!props.ellipsis, 'Typography', 'When `ellipsis` is enabled, please use `content` instead of children');\n      }\n    });\n    function getChildrenText() {\n      var _a;\n      return props.ellipsis || props.editable ? props.content : (_a = findDOMNode(contentRef.value)) === null || _a === void 0 ? void 0 : _a.innerText;\n    }\n    // =============== Expand ===============\n    function onExpandClick(e) {\n      const {\n        onExpand\n      } = ellipsis.value;\n      state.expanded = true;\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(e);\n    }\n    // ================ Edit ================\n    function onEditClick(e) {\n      e.preventDefault();\n      state.originContent = props.content;\n      triggerEdit(true);\n    }\n    function onEditChange(value) {\n      onContentChange(value);\n      triggerEdit(false);\n    }\n    function onContentChange(value) {\n      const {\n        onChange\n      } = editable.value;\n      if (value !== props.content) {\n        emit('update:content', value);\n        onChange === null || onChange === void 0 ? void 0 : onChange(value);\n      }\n    }\n    function onEditCancel() {\n      var _a, _b;\n      (_b = (_a = editable.value).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n      triggerEdit(false);\n    }\n    // ================ Copy ================\n    function onCopyClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      const {\n        copyable\n      } = props;\n      const copyConfig = _extends({}, typeof copyable === 'object' ? copyable : null);\n      if (copyConfig.text === undefined) {\n        copyConfig.text = getChildrenText();\n      }\n      copy(copyConfig.text || '');\n      state.copied = true;\n      nextTick(() => {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy(e);\n        }\n        state.copyId = setTimeout(() => {\n          state.copied = false;\n        }, 3000);\n      });\n    }\n    const editable = computed(() => {\n      const editable = props.editable;\n      if (!editable) return {\n        editing: false\n      };\n      return _extends({}, typeof editable === 'object' ? editable : null);\n    });\n    const [editing, setEditing] = useMergedState(false, {\n      value: computed(() => {\n        return editable.value.editing;\n      })\n    });\n    function triggerEdit(edit) {\n      const {\n        onStart\n      } = editable.value;\n      if (edit && onStart) {\n        onStart();\n      }\n      setEditing(edit);\n    }\n    watch(editing, val => {\n      var _a;\n      if (!val) {\n        (_a = editIcon.value) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    }, {\n      flush: 'post'\n    });\n    // ============== Ellipsis ==============\n    function resizeOnNextFrame(sizeInfo) {\n      if (sizeInfo) {\n        const {\n          width,\n          height\n        } = sizeInfo;\n        if (!width || !height) return;\n      }\n      raf.cancel(state.rafId);\n      state.rafId = raf(() => {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        syncEllipsis();\n      });\n    }\n    const canUseCSSEllipsis = computed(() => {\n      const {\n        rows,\n        expandable,\n        suffix,\n        onEllipsis,\n        tooltip\n      } = ellipsis.value;\n      if (suffix || tooltip) return false;\n      // Can't use css ellipsis since we need to provide the place for button\n      if (props.editable || props.copyable || expandable || onEllipsis) {\n        return false;\n      }\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n      return isLineClampSupport;\n    });\n    const syncEllipsis = () => {\n      const {\n        ellipsisText,\n        isEllipsis\n      } = state;\n      const {\n        rows,\n        suffix,\n        onEllipsis\n      } = ellipsis.value;\n      if (!rows || rows < 0 || !findDOMNode(contentRef.value) || state.expanded || props.content === undefined) return;\n      // Do not measure if css already support ellipsis\n      if (canUseCSSEllipsis.value) return;\n      const {\n        content,\n        text,\n        ellipsis: ell\n      } = measure(findDOMNode(contentRef.value), {\n        rows,\n        suffix\n      }, props.content, renderOperations(true), ELLIPSIS_STR);\n      if (ellipsisText !== text || state.isEllipsis !== ell) {\n        state.ellipsisText = text;\n        state.ellipsisContent = content;\n        state.isEllipsis = ell;\n        if (isEllipsis !== ell && onEllipsis) {\n          onEllipsis(ell);\n        }\n      }\n    };\n    function wrapperDecorations(_ref2, content) {\n      let {\n        mark,\n        code,\n        underline,\n        delete: del,\n        strong,\n        keyboard\n      } = _ref2;\n      let currentContent = content;\n      function wrap(needed, Tag) {\n        if (!needed) return;\n        const _currentContent = function () {\n          return currentContent;\n        }();\n        currentContent = _createVNode(Tag, null, {\n          default: () => [_currentContent]\n        });\n      }\n      wrap(strong, 'strong');\n      wrap(underline, 'u');\n      wrap(del, 'del');\n      wrap(code, 'code');\n      wrap(mark, 'mark');\n      wrap(keyboard, 'kbd');\n      return currentContent;\n    }\n    function renderExpand(forceRender) {\n      const {\n        expandable,\n        symbol\n      } = ellipsis.value;\n      if (!expandable) return null;\n      // force render expand icon for measure usage or it will cause dead loop\n      if (!forceRender && (state.expanded || !state.isEllipsis)) return null;\n      const expandContent = (slots.ellipsisSymbol ? slots.ellipsisSymbol() : symbol) || state.expandStr;\n      return _createVNode(\"a\", {\n        \"key\": \"expand\",\n        \"class\": `${prefixCls.value}-expand`,\n        \"onClick\": onExpandClick,\n        \"aria-label\": state.expandStr\n      }, [expandContent]);\n    }\n    function renderEdit() {\n      if (!props.editable) return;\n      const {\n        tooltip,\n        triggerType = ['icon']\n      } = props.editable;\n      const icon = slots.editableIcon ? slots.editableIcon() : _createVNode(EditOutlined, {\n        \"role\": \"button\"\n      }, null);\n      const title = slots.editableTooltip ? slots.editableTooltip() : state.editStr;\n      const ariaLabel = typeof title === 'string' ? title : '';\n      return triggerType.indexOf('icon') !== -1 ? _createVNode(Tooltip, {\n        \"key\": \"edit\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: () => [_createVNode(TransButton, {\n          \"ref\": editIcon,\n          \"class\": `${prefixCls.value}-edit`,\n          \"onClick\": onEditClick,\n          \"aria-label\": ariaLabel\n        }, {\n          default: () => [icon]\n        })]\n      }) : null;\n    }\n    function renderCopy() {\n      if (!props.copyable) return;\n      const {\n        tooltip\n      } = props.copyable;\n      const defaultTitle = state.copied ? state.copiedStr : state.copyStr;\n      const title = slots.copyableTooltip ? slots.copyableTooltip({\n        copied: state.copied\n      }) : defaultTitle;\n      const ariaLabel = typeof title === 'string' ? title : '';\n      const defaultIcon = state.copied ? _createVNode(CheckOutlined, null, null) : _createVNode(CopyOutlined, null, null);\n      const icon = slots.copyableIcon ? slots.copyableIcon({\n        copied: !!state.copied\n      }) : defaultIcon;\n      return _createVNode(Tooltip, {\n        \"key\": \"copy\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: () => [_createVNode(TransButton, {\n          \"class\": [`${prefixCls.value}-copy`, {\n            [`${prefixCls.value}-copy-success`]: state.copied\n          }],\n          \"onClick\": onCopyClick,\n          \"aria-label\": ariaLabel\n        }, {\n          default: () => [icon]\n        })]\n      });\n    }\n    function renderEditInput() {\n      const {\n        class: className,\n        style\n      } = attrs;\n      const {\n        maxlength,\n        autoSize,\n        onEnd\n      } = editable.value;\n      return _createVNode(Editable, {\n        \"class\": className,\n        \"style\": style,\n        \"prefixCls\": prefixCls.value,\n        \"value\": props.content,\n        \"originContent\": state.originContent,\n        \"maxlength\": maxlength,\n        \"autoSize\": autoSize,\n        \"onSave\": onEditChange,\n        \"onChange\": onContentChange,\n        \"onCancel\": onEditCancel,\n        \"onEnd\": onEnd,\n        \"direction\": direction.value,\n        \"component\": props.component\n      }, {\n        enterIcon: slots.editableEnterIcon\n      });\n    }\n    function renderOperations(forceRenderExpanded) {\n      return [renderExpand(forceRenderExpanded), renderEdit(), renderCopy()].filter(node => node);\n    }\n    return () => {\n      var _a;\n      const {\n        triggerType = ['icon']\n      } = editable.value;\n      const children = props.ellipsis || props.editable ? props.content !== undefined ? props.content : (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots) : slots.default ? slots.default() : props.content;\n      if (editing.value) {\n        return renderEditInput();\n      }\n      return _createVNode(LocaleReceiver, {\n        \"componentName\": \"Text\",\n        \"children\": locale => {\n          const _a = _extends(_extends({}, props), attrs),\n            {\n              type,\n              disabled,\n              content,\n              class: className,\n              style\n            } = _a,\n            restProps = __rest(_a, [\"type\", \"disabled\", \"content\", \"class\", \"style\"]);\n          const {\n            rows,\n            suffix,\n            tooltip\n          } = ellipsis.value;\n          const {\n            edit,\n            copy: copyStr,\n            copied,\n            expand\n          } = locale;\n          state.editStr = edit;\n          state.copyStr = copyStr;\n          state.copiedStr = copied;\n          state.expandStr = expand;\n          const textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'onUpdate:content']);\n          const cssEllipsis = canUseCSSEllipsis.value;\n          const cssTextOverflow = rows === 1 && cssEllipsis;\n          const cssLineClamp = rows && rows > 1 && cssEllipsis;\n          let textNode = children;\n          let ariaLabel;\n          // Only use js ellipsis when css ellipsis not support\n          if (rows && state.isEllipsis && !state.expanded && !cssEllipsis) {\n            const {\n              title\n            } = restProps;\n            let restContent = title || '';\n            if (!title && (typeof children === 'string' || typeof children === 'number')) {\n              restContent = String(children);\n            }\n            // show rest content as title on symbol\n            restContent = restContent === null || restContent === void 0 ? void 0 : restContent.slice(String(state.ellipsisContent || '').length);\n            // We move full content to outer element to avoid repeat read the content by accessibility\n            textNode = _createVNode(_Fragment, null, [toRaw(state.ellipsisContent), _createVNode(\"span\", {\n              \"title\": restContent,\n              \"aria-hidden\": \"true\"\n            }, [ELLIPSIS_STR]), suffix]);\n          } else {\n            textNode = _createVNode(_Fragment, null, [children, suffix]);\n          }\n          textNode = wrapperDecorations(props, textNode);\n          const showTooltip = tooltip && rows && state.isEllipsis && !state.expanded && !cssEllipsis;\n          const title = slots.ellipsisTooltip ? slots.ellipsisTooltip() : tooltip;\n          return _createVNode(ResizeObserver, {\n            \"onResize\": resizeOnNextFrame,\n            \"disabled\": !rows\n          }, {\n            default: () => [_createVNode(Typography, _objectSpread({\n              \"ref\": contentRef,\n              \"class\": [{\n                [`${prefixCls.value}-${type}`]: type,\n                [`${prefixCls.value}-disabled`]: disabled,\n                [`${prefixCls.value}-ellipsis`]: rows,\n                [`${prefixCls.value}-single-line`]: rows === 1 && !state.isEllipsis,\n                [`${prefixCls.value}-ellipsis-single-line`]: cssTextOverflow,\n                [`${prefixCls.value}-ellipsis-multiple-line`]: cssLineClamp\n              }, className],\n              \"style\": _extends(_extends({}, style), {\n                WebkitLineClamp: cssLineClamp ? rows : undefined\n              }),\n              \"aria-label\": ariaLabel,\n              \"direction\": direction.value,\n              \"onClick\": triggerType.indexOf('text') !== -1 ? onEditClick : () => {}\n            }, textProps), {\n              default: () => [showTooltip ? _createVNode(Tooltip, {\n                \"title\": tooltip === true ? children : title\n              }, {\n                default: () => [_createVNode(\"span\", null, [textNode])]\n              }) : textNode, renderOperations()]\n            })]\n          });\n        }\n      }, null);\n    };\n  }\n});\nexport default Base;","map":{"version":3,"names":["_objectSpread","_extends","Fragment","_Fragment","resolveDirective","_resolveDirective","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","LocaleReceiver","warning","TransButton","raf","isStyleSupport","Editable","measure","Typography","ResizeObserver","Tooltip","copy","CheckOutlined","CopyOutlined","EditOutlined","defineComponent","reactive","ref","onMounted","onBeforeUnmount","watch","watchEffect","nextTick","computed","toRaw","useConfigInject","omit","useMergedState","findDOMNode","isLineClampSupport","isTextOverflowSupport","ELLIPSIS_STR","baseProps","editable","type","Boolean","default","undefined","copyable","prefixCls","String","component","disabled","ellipsis","code","mark","underline","delete","strong","keyboard","content","Function","Base","compatConfig","MODE","name","inheritAttrs","props","setup","_ref","slots","attrs","emit","direction","state","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","expandStr","copyStr","copiedStr","editStr","copyId","rafId","prevProps","originContent","contentRef","editIcon","rows","expandable","syncEllipsis","clearTimeout","cancel","value","resizeOnNextFrame","flush","deep","getChildrenText","_a","innerText","onExpandClick","onExpand","onEditClick","preventDefault","triggerEdit","onEditChange","onContentChange","onChange","onEditCancel","_b","onCancel","onCopyClick","stopPropagation","copyConfig","text","onCopy","setTimeout","editing","setEditing","edit","onStart","val","focus","sizeInfo","width","height","canUseCSSEllipsis","suffix","onEllipsis","tooltip","ell","renderOperations","wrapperDecorations","_ref2","del","currentContent","wrap","needed","Tag","_currentContent","renderExpand","forceRender","symbol","expandContent","ellipsisSymbol","renderEdit","triggerType","icon","editableIcon","title","editableTooltip","ariaLabel","renderCopy","defaultTitle","copyableTooltip","defaultIcon","copyableIcon","renderEditInput","class","className","style","maxlength","autoSize","onEnd","enterIcon","editableEnterIcon","forceRenderExpanded","filter","node","children","locale","restProps","expand","textProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","restContent","slice","showTooltip","ellipsisTooltip","WebkitLineClamp"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/typography/Base.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Fragment as _Fragment, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Editable from './Editable';\nimport measure from './util';\nimport Typography from './Typography';\nimport ResizeObserver from '../vc-resize-observer';\nimport Tooltip from '../tooltip';\nimport copy from '../_util/copy-to-clipboard';\nimport CheckOutlined from \"@ant-design/icons-vue/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons-vue/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons-vue/es/icons/EditOutlined\";\nimport { defineComponent, reactive, ref, onMounted, onBeforeUnmount, watch, watchEffect, nextTick, computed, toRaw } from 'vue';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport omit from '../_util/omit';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport { findDOMNode } from '../_util/props-util';\nconst isLineClampSupport = isStyleSupport('webkitLineClamp');\nconst isTextOverflowSupport = isStyleSupport('textOverflow');\nconst ELLIPSIS_STR = '...';\nexport const baseProps = () => ({\n  editable: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  copyable: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  prefixCls: String,\n  component: String,\n  type: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  ellipsis: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  code: {\n    type: Boolean,\n    default: undefined\n  },\n  mark: {\n    type: Boolean,\n    default: undefined\n  },\n  underline: {\n    type: Boolean,\n    default: undefined\n  },\n  delete: {\n    type: Boolean,\n    default: undefined\n  },\n  strong: {\n    type: Boolean,\n    default: undefined\n  },\n  keyboard: {\n    type: Boolean,\n    default: undefined\n  },\n  content: String,\n  'onUpdate:content': Function\n});\nconst Base = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'TypographyBase',\n  inheritAttrs: false,\n  props: baseProps(),\n  // emits: ['update:content'],\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit\n    } = _ref;\n    const {\n      prefixCls,\n      direction\n    } = useConfigInject('typography', props);\n    const state = reactive({\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false,\n      //locale\n      expandStr: '',\n      copyStr: '',\n      copiedStr: '',\n      editStr: '',\n      copyId: undefined,\n      rafId: undefined,\n      prevProps: undefined,\n      originContent: ''\n    });\n    const contentRef = ref();\n    const editIcon = ref();\n    const ellipsis = computed(() => {\n      const ellipsis = props.ellipsis;\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, typeof ellipsis === 'object' ? ellipsis : null);\n    });\n    onMounted(() => {\n      state.clientRendered = true;\n      syncEllipsis();\n    });\n    onBeforeUnmount(() => {\n      clearTimeout(state.copyId);\n      raf.cancel(state.rafId);\n    });\n    watch([() => ellipsis.value.rows, () => props.content], () => {\n      nextTick(() => {\n        resizeOnNextFrame();\n      });\n    }, {\n      flush: 'post',\n      deep: true\n    });\n    watchEffect(() => {\n      if (props.content === undefined) {\n        warning(!props.editable, 'Typography', 'When `editable` is enabled, please use `content` instead of children');\n        warning(!props.ellipsis, 'Typography', 'When `ellipsis` is enabled, please use `content` instead of children');\n      }\n    });\n    function getChildrenText() {\n      var _a;\n      return props.ellipsis || props.editable ? props.content : (_a = findDOMNode(contentRef.value)) === null || _a === void 0 ? void 0 : _a.innerText;\n    }\n    // =============== Expand ===============\n    function onExpandClick(e) {\n      const {\n        onExpand\n      } = ellipsis.value;\n      state.expanded = true;\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(e);\n    }\n    // ================ Edit ================\n    function onEditClick(e) {\n      e.preventDefault();\n      state.originContent = props.content;\n      triggerEdit(true);\n    }\n    function onEditChange(value) {\n      onContentChange(value);\n      triggerEdit(false);\n    }\n    function onContentChange(value) {\n      const {\n        onChange\n      } = editable.value;\n      if (value !== props.content) {\n        emit('update:content', value);\n        onChange === null || onChange === void 0 ? void 0 : onChange(value);\n      }\n    }\n    function onEditCancel() {\n      var _a, _b;\n      (_b = (_a = editable.value).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n      triggerEdit(false);\n    }\n    // ================ Copy ================\n    function onCopyClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      const {\n        copyable\n      } = props;\n      const copyConfig = _extends({}, typeof copyable === 'object' ? copyable : null);\n      if (copyConfig.text === undefined) {\n        copyConfig.text = getChildrenText();\n      }\n      copy(copyConfig.text || '');\n      state.copied = true;\n      nextTick(() => {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy(e);\n        }\n        state.copyId = setTimeout(() => {\n          state.copied = false;\n        }, 3000);\n      });\n    }\n    const editable = computed(() => {\n      const editable = props.editable;\n      if (!editable) return {\n        editing: false\n      };\n      return _extends({}, typeof editable === 'object' ? editable : null);\n    });\n    const [editing, setEditing] = useMergedState(false, {\n      value: computed(() => {\n        return editable.value.editing;\n      })\n    });\n    function triggerEdit(edit) {\n      const {\n        onStart\n      } = editable.value;\n      if (edit && onStart) {\n        onStart();\n      }\n      setEditing(edit);\n    }\n    watch(editing, val => {\n      var _a;\n      if (!val) {\n        (_a = editIcon.value) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    }, {\n      flush: 'post'\n    });\n    // ============== Ellipsis ==============\n    function resizeOnNextFrame(sizeInfo) {\n      if (sizeInfo) {\n        const {\n          width,\n          height\n        } = sizeInfo;\n        if (!width || !height) return;\n      }\n      raf.cancel(state.rafId);\n      state.rafId = raf(() => {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        syncEllipsis();\n      });\n    }\n    const canUseCSSEllipsis = computed(() => {\n      const {\n        rows,\n        expandable,\n        suffix,\n        onEllipsis,\n        tooltip\n      } = ellipsis.value;\n      if (suffix || tooltip) return false;\n      // Can't use css ellipsis since we need to provide the place for button\n      if (props.editable || props.copyable || expandable || onEllipsis) {\n        return false;\n      }\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n      return isLineClampSupport;\n    });\n    const syncEllipsis = () => {\n      const {\n        ellipsisText,\n        isEllipsis\n      } = state;\n      const {\n        rows,\n        suffix,\n        onEllipsis\n      } = ellipsis.value;\n      if (!rows || rows < 0 || !findDOMNode(contentRef.value) || state.expanded || props.content === undefined) return;\n      // Do not measure if css already support ellipsis\n      if (canUseCSSEllipsis.value) return;\n      const {\n        content,\n        text,\n        ellipsis: ell\n      } = measure(findDOMNode(contentRef.value), {\n        rows,\n        suffix\n      }, props.content, renderOperations(true), ELLIPSIS_STR);\n      if (ellipsisText !== text || state.isEllipsis !== ell) {\n        state.ellipsisText = text;\n        state.ellipsisContent = content;\n        state.isEllipsis = ell;\n        if (isEllipsis !== ell && onEllipsis) {\n          onEllipsis(ell);\n        }\n      }\n    };\n    function wrapperDecorations(_ref2, content) {\n      let {\n        mark,\n        code,\n        underline,\n        delete: del,\n        strong,\n        keyboard\n      } = _ref2;\n      let currentContent = content;\n      function wrap(needed, Tag) {\n        if (!needed) return;\n        const _currentContent = function () {\n          return currentContent;\n        }();\n        currentContent = _createVNode(Tag, null, {\n          default: () => [_currentContent]\n        });\n      }\n      wrap(strong, 'strong');\n      wrap(underline, 'u');\n      wrap(del, 'del');\n      wrap(code, 'code');\n      wrap(mark, 'mark');\n      wrap(keyboard, 'kbd');\n      return currentContent;\n    }\n    function renderExpand(forceRender) {\n      const {\n        expandable,\n        symbol\n      } = ellipsis.value;\n      if (!expandable) return null;\n      // force render expand icon for measure usage or it will cause dead loop\n      if (!forceRender && (state.expanded || !state.isEllipsis)) return null;\n      const expandContent = (slots.ellipsisSymbol ? slots.ellipsisSymbol() : symbol) || state.expandStr;\n      return _createVNode(\"a\", {\n        \"key\": \"expand\",\n        \"class\": `${prefixCls.value}-expand`,\n        \"onClick\": onExpandClick,\n        \"aria-label\": state.expandStr\n      }, [expandContent]);\n    }\n    function renderEdit() {\n      if (!props.editable) return;\n      const {\n        tooltip,\n        triggerType = ['icon']\n      } = props.editable;\n      const icon = slots.editableIcon ? slots.editableIcon() : _createVNode(EditOutlined, {\n        \"role\": \"button\"\n      }, null);\n      const title = slots.editableTooltip ? slots.editableTooltip() : state.editStr;\n      const ariaLabel = typeof title === 'string' ? title : '';\n      return triggerType.indexOf('icon') !== -1 ? _createVNode(Tooltip, {\n        \"key\": \"edit\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: () => [_createVNode(TransButton, {\n          \"ref\": editIcon,\n          \"class\": `${prefixCls.value}-edit`,\n          \"onClick\": onEditClick,\n          \"aria-label\": ariaLabel\n        }, {\n          default: () => [icon]\n        })]\n      }) : null;\n    }\n    function renderCopy() {\n      if (!props.copyable) return;\n      const {\n        tooltip\n      } = props.copyable;\n      const defaultTitle = state.copied ? state.copiedStr : state.copyStr;\n      const title = slots.copyableTooltip ? slots.copyableTooltip({\n        copied: state.copied\n      }) : defaultTitle;\n      const ariaLabel = typeof title === 'string' ? title : '';\n      const defaultIcon = state.copied ? _createVNode(CheckOutlined, null, null) : _createVNode(CopyOutlined, null, null);\n      const icon = slots.copyableIcon ? slots.copyableIcon({\n        copied: !!state.copied\n      }) : defaultIcon;\n      return _createVNode(Tooltip, {\n        \"key\": \"copy\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: () => [_createVNode(TransButton, {\n          \"class\": [`${prefixCls.value}-copy`, {\n            [`${prefixCls.value}-copy-success`]: state.copied\n          }],\n          \"onClick\": onCopyClick,\n          \"aria-label\": ariaLabel\n        }, {\n          default: () => [icon]\n        })]\n      });\n    }\n    function renderEditInput() {\n      const {\n        class: className,\n        style\n      } = attrs;\n      const {\n        maxlength,\n        autoSize,\n        onEnd\n      } = editable.value;\n      return _createVNode(Editable, {\n        \"class\": className,\n        \"style\": style,\n        \"prefixCls\": prefixCls.value,\n        \"value\": props.content,\n        \"originContent\": state.originContent,\n        \"maxlength\": maxlength,\n        \"autoSize\": autoSize,\n        \"onSave\": onEditChange,\n        \"onChange\": onContentChange,\n        \"onCancel\": onEditCancel,\n        \"onEnd\": onEnd,\n        \"direction\": direction.value,\n        \"component\": props.component\n      }, {\n        enterIcon: slots.editableEnterIcon\n      });\n    }\n    function renderOperations(forceRenderExpanded) {\n      return [renderExpand(forceRenderExpanded), renderEdit(), renderCopy()].filter(node => node);\n    }\n    return () => {\n      var _a;\n      const {\n        triggerType = ['icon']\n      } = editable.value;\n      const children = props.ellipsis || props.editable ? props.content !== undefined ? props.content : (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots) : slots.default ? slots.default() : props.content;\n      if (editing.value) {\n        return renderEditInput();\n      }\n      return _createVNode(LocaleReceiver, {\n        \"componentName\": \"Text\",\n        \"children\": locale => {\n          const _a = _extends(_extends({}, props), attrs),\n            {\n              type,\n              disabled,\n              content,\n              class: className,\n              style\n            } = _a,\n            restProps = __rest(_a, [\"type\", \"disabled\", \"content\", \"class\", \"style\"]);\n          const {\n            rows,\n            suffix,\n            tooltip\n          } = ellipsis.value;\n          const {\n            edit,\n            copy: copyStr,\n            copied,\n            expand\n          } = locale;\n          state.editStr = edit;\n          state.copyStr = copyStr;\n          state.copiedStr = copied;\n          state.expandStr = expand;\n          const textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'onUpdate:content']);\n          const cssEllipsis = canUseCSSEllipsis.value;\n          const cssTextOverflow = rows === 1 && cssEllipsis;\n          const cssLineClamp = rows && rows > 1 && cssEllipsis;\n          let textNode = children;\n          let ariaLabel;\n          // Only use js ellipsis when css ellipsis not support\n          if (rows && state.isEllipsis && !state.expanded && !cssEllipsis) {\n            const {\n              title\n            } = restProps;\n            let restContent = title || '';\n            if (!title && (typeof children === 'string' || typeof children === 'number')) {\n              restContent = String(children);\n            }\n            // show rest content as title on symbol\n            restContent = restContent === null || restContent === void 0 ? void 0 : restContent.slice(String(state.ellipsisContent || '').length);\n            // We move full content to outer element to avoid repeat read the content by accessibility\n            textNode = _createVNode(_Fragment, null, [toRaw(state.ellipsisContent), _createVNode(\"span\", {\n              \"title\": restContent,\n              \"aria-hidden\": \"true\"\n            }, [ELLIPSIS_STR]), suffix]);\n          } else {\n            textNode = _createVNode(_Fragment, null, [children, suffix]);\n          }\n          textNode = wrapperDecorations(props, textNode);\n          const showTooltip = tooltip && rows && state.isEllipsis && !state.expanded && !cssEllipsis;\n          const title = slots.ellipsisTooltip ? slots.ellipsisTooltip() : tooltip;\n          return _createVNode(ResizeObserver, {\n            \"onResize\": resizeOnNextFrame,\n            \"disabled\": !rows\n          }, {\n            default: () => [_createVNode(Typography, _objectSpread({\n              \"ref\": contentRef,\n              \"class\": [{\n                [`${prefixCls.value}-${type}`]: type,\n                [`${prefixCls.value}-disabled`]: disabled,\n                [`${prefixCls.value}-ellipsis`]: rows,\n                [`${prefixCls.value}-single-line`]: rows === 1 && !state.isEllipsis,\n                [`${prefixCls.value}-ellipsis-single-line`]: cssTextOverflow,\n                [`${prefixCls.value}-ellipsis-multiple-line`]: cssLineClamp\n              }, className],\n              \"style\": _extends(_extends({}, style), {\n                WebkitLineClamp: cssLineClamp ? rows : undefined\n              }),\n              \"aria-label\": ariaLabel,\n              \"direction\": direction.value,\n              \"onClick\": triggerType.indexOf('text') !== -1 ? onEditClick : () => {}\n            }, textProps), {\n              default: () => [showTooltip ? _createVNode(Tooltip, {\n                \"title\": tooltip === true ? children : title\n              }, {\n                default: () => [_createVNode(\"span\", null, [textNode])]\n              }) : textNode, renderOperations()]\n            })]\n          });\n        }\n      }, null);\n    };\n  }\n});\nexport default Base;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}