{"ast":null,"code":"/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nconst HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n  pointer-events: none !important;\n`;\nconst SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break', 'white-space'];\nconst computedStyleCache = {};\nlet hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  let useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  const style = window.getComputedStyle(node);\n  const boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  const paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  const borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  const sizingStyle = SIZING_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';');\n  const nodeInfo = {\n    sizingStyle,\n    paddingSize,\n    borderSize,\n    boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nexport default function calculateAutoSizeStyle(uiTextNode) {\n  let useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(hiddenTextarea);\n  }\n  // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  const {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    sizingStyle\n  } = calculateNodeStyling(uiTextNode, useCache);\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', `${sizingStyle};${HIDDEN_TEXTAREA_STYLE}`);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  let minHeight = undefined;\n  let maxHeight = undefined;\n  let overflowY;\n  let height = hiddenTextarea.scrollHeight;\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n  const style = {\n    height: `${height}px`,\n    overflowY,\n    resize: 'none'\n  };\n  if (minHeight) {\n    style.minHeight = `${minHeight}px`;\n  }\n  if (maxHeight) {\n    style.maxHeight = `${maxHeight}px`;\n  }\n  return style;\n}","map":{"version":3,"names":["HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","hiddenTextarea","calculateNodeStyling","node","useCache","arguments","length","undefined","nodeRef","getAttribute","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","sizingStyle","map","name","join","nodeInfo","calculateAutoSizeStyle","uiTextNode","minRows","maxRows","document","createElement","setAttribute","body","appendChild","removeAttribute","value","placeholder","minHeight","maxHeight","overflowY","height","scrollHeight","singleRowHeight","Math","max","min","resize"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/input/calculateNodeHeight.js"],"sourcesContent":["/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nconst HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n  pointer-events: none !important;\n`;\nconst SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break', 'white-space'];\nconst computedStyleCache = {};\nlet hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  let useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  const style = window.getComputedStyle(node);\n  const boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  const paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  const borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  const sizingStyle = SIZING_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';');\n  const nodeInfo = {\n    sizingStyle,\n    paddingSize,\n    borderSize,\n    boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nexport default function calculateAutoSizeStyle(uiTextNode) {\n  let useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(hiddenTextarea);\n  }\n  // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  const {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    sizingStyle\n  } = calculateNodeStyling(uiTextNode, useCache);\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', `${sizingStyle};${HIDDEN_TEXTAREA_STYLE}`);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  let minHeight = undefined;\n  let maxHeight = undefined;\n  let overflowY;\n  let height = hiddenTextarea.scrollHeight;\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n  const style = {\n    height: `${height}px`,\n    overflowY,\n    resize: 'none'\n  };\n  if (minHeight) {\n    style.minHeight = `${minHeight}px`;\n  }\n  if (maxHeight) {\n    style.maxHeight = `${maxHeight}px`;\n  }\n  return style;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}