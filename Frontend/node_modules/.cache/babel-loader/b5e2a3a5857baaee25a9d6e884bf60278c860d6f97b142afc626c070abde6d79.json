{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes, { withUndefined } from '../../_util/vue-types';\nimport classNames from '../../_util/classNames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlot } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode, getDataAndAria } from './util';\nimport { defineComponent } from 'vue';\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = {\n      handler: function handler() {\n        this.needSyncKeys[k] = true;\n      },\n      flush: 'sync'\n    };\n  });\n  return watch;\n}\nvar Tree = defineComponent({\n  name: 'Tree',\n  mixins: [BaseMixin],\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n  inheritAttrs: false,\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array,\n    showLine: PropTypes.looseBool,\n    showIcon: PropTypes.looseBool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.looseBool,\n    selectable: PropTypes.looseBool,\n    disabled: PropTypes.looseBool,\n    multiple: PropTypes.looseBool,\n    checkable: withUndefined(PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool])),\n    checkStrictly: PropTypes.looseBool,\n    draggable: PropTypes.looseBool,\n    defaultExpandParent: PropTypes.looseBool,\n    autoExpandParent: PropTypes.looseBool,\n    defaultExpandAll: PropTypes.looseBool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    __propsSymbol__: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends(_extends({}, state), this.getDerivedState(getOptionProps(this), state));\n  },\n  watch: _extends(_extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys'])), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      } // ================== Tree Node ==================\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n      if (treeNode) {\n        newState._treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n      var keyEntities = newState._keyEntities || prevState._keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = _toConsumableArray(keyEntities.keys());\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n      var children = getSlot(node);\n      this.dragNode = node;\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n      this.__emit('dragstart', {\n        event: event,\n        node: node\n      });\n    },\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n        eventKey = node.eventKey;\n      if (!this.dragNode || !node.selectHandle) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n          _this.__emit('dragenter', {\n            event: event,\n            node: node,\n            expandedKeys: newExpandedKeys\n          });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _this$$data = this.$data,\n        _dragOverNodeKey = _this$$data._dragOverNodeKey,\n        _dropPosition = _this$$data._dropPosition; // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _dropPosition) return;\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n      this.__emit('dragover', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragend', {\n        event: event,\n        node: node\n      });\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _this$$data2 = this.$data,\n        _this$$data2$_dragNod = _this$$data2._dragNodesKeys,\n        _dragNodesKeys = _this$$data2$_dragNod === void 0 ? [] : _this$$data2$_dragNod,\n        _dropPosition = _this$$data2._dropPosition;\n      var eventKey = node.eventKey,\n        pos = node.pos;\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      this.__emit('drop', dropResult);\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n      var _getOptionProps = getOptionProps(treeNode),\n        selected = _getOptionProps.selected,\n        eventKey = _getOptionProps.eventKey;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      this.setUncontrolledState({\n        _selectedKeys: selectedKeys\n      });\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _this$$data3 = this.$data,\n        keyEntities = _this$$data3._keyEntities,\n        oriCheckedKeys = _this$$data3._checkedKeys,\n        oriHalfCheckedKeys = _this$$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n      var _getOptionProps2 = getOptionProps(treeNode),\n        eventKey = _getOptionProps2.eventKey; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        this.setUncontrolledState({\n          _checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n            checkedKeys: oriCheckedKeys,\n            halfCheckedKeys: oriHalfCheckedKeys\n          }),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n            loadedKeys = _ref$_loadedKeys === void 0 ? [] : _ref$_loadedKeys,\n            _ref$_loadingKeys = _ref._loadingKeys,\n            loadingKeys = _ref$_loadingKeys === void 0 ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n          var _getOptionProps3 = getOptionProps(treeNode),\n            eventKey = _getOptionProps3.eventKey;\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          } // Process load data\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this2$$data = _this2.$data,\n              currentLoadedKeys = _this2$$data._loadedKeys,\n              currentLoadingKeys = _this2$$data._loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n      var _getOptionProps4 = getOptionProps(treeNode),\n        eventKey = _getOptionProps4.eventKey,\n        expanded = _getOptionProps4.expanded; // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      }); // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({\n            _expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n      this.__emit('rightClick', {\n        event: event,\n        node: node\n      });\n    },\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _this$$data$_checkedK = this.$data._checkedKeys,\n        checkedKeys = _this$$data$_checkedK === void 0 ? [] : _this$$data$_checkedK;\n      return checkedKeys.indexOf(key) !== -1;\n    },\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$$data4 = this.$data,\n        keyEntities = _this$$data4._keyEntities,\n        _this$$data4$_expande = _this$$data4._expandedKeys,\n        expandedKeys = _this$$data4$_expande === void 0 ? [] : _this$$data4$_expande,\n        _this$$data4$_selecte = _this$$data4._selectedKeys,\n        selectedKeys = _this$$data4$_selecte === void 0 ? [] : _this$$data4$_selecte,\n        _this$$data4$_halfChe = _this$$data4._halfCheckedKeys,\n        halfCheckedKeys = _this$$data4$_halfChe === void 0 ? [] : _this$$data4$_halfChe,\n        _this$$data4$_loadedK = _this$$data4._loadedKeys,\n        loadedKeys = _this$$data4$_loadedK === void 0 ? [] : _this$$data4$_loadedK,\n        _this$$data4$_loading = _this$$data4._loadingKeys,\n        loadingKeys = _this$$data4$_loading === void 0 ? [] : _this$$data4$_loading,\n        dragOverNodeKey = _this$$data4._dragOverNodeKey,\n        dropPosition = _this$$data4._dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n      return cloneElement(child, {\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1,\n        key: key\n      });\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n    var treeNode = this.$data._treeNode;\n    var _this$$props = this.$props,\n      prefixCls = _this$$props.prefixCls,\n      focusable = _this$$props.focusable,\n      showLine = _this$$props.showLine,\n      _this$$props$tabindex = _this$$props.tabindex,\n      tabindex = _this$$props$tabindex === void 0 ? 0 : _this$$props$tabindex;\n    var domProps = getDataAndAria(_extends(_extends({}, this.$props), this.$attrs));\n    var _this$$attrs = this.$attrs,\n      className = _this$$attrs.class,\n      style = _this$$attrs.style;\n    return _createVNode(\"ul\", _objectSpread(_objectSpread({}, domProps), {}, {\n      \"class\": classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\n      \"style\": style,\n      \"role\": \"tree\",\n      \"unselectable\": \"on\",\n      \"tabindex\": focusable ? tabindex : null\n    }), [mapChildren(treeNode, function (node, index) {\n      return _this4.renderTreeNode(node, index);\n    })]);\n  }\n});\nexport { Tree };\nexport default Tree;","map":{"version":3,"names":["_objectSpread","_defineProperty","_toConsumableArray","_extends","createVNode","_createVNode","PropTypes","withUndefined","classNames","warning","hasProp","initDefaultProps","getOptionProps","getSlot","cloneElement","BaseMixin","convertTreeToEntities","convertDataToTree","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","getDataAndAria","defineComponent","getWatch","keys","arguments","length","undefined","watch","forEach","k","handler","needSyncKeys","flush","Tree","name","mixins","provide","vcTree","inheritAttrs","props","prefixCls","string","tabindex","oneOfType","number","children","any","treeData","array","showLine","looseBool","showIcon","icon","object","func","focusable","selectable","disabled","multiple","checkable","checkStrictly","draggable","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","expandedKeys","defaultCheckedKeys","checkedKeys","defaultSelectedKeys","selectedKeys","loadData","loadedKeys","filterTreeNode","openTransitionName","openAnimation","switcherIcon","__propsSymbol__","data","$props","domTreeNodes","state","_posEntities","Map","_keyEntities","_expandedKeys","_selectedKeys","_checkedKeys","_halfCheckedKeys","_loadedKeys","_loadingKeys","_treeNode","_prevProps","_dragOverNodeKey","_dropPosition","_dragNodesKeys","getDerivedState","setState","$data","methods","prevState","newState","self","needSync","treeNode","entitiesMap","keyEntities","checkedKeyEntity","halfCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","onNodeDragStart","event","node","eventKey","dragNode","__emit","onNodeDragEnter","_this","pos","selectHandle","dropPosition","setTimeout","delayedDragEnterLogic","Object","key","clearTimeout","newExpandedKeys","onNodeDragOver","_this$$data","onNodeDragLeave","onNodeDragEnd","onNodeDrop","_this$$data2","_this$$data2$_dragNod","indexOf","posArr","dropResult","dragNodesKeys","slice","Number","dropToGap","onNodeClick","e","onNodeDoubleClick","onNodeSelect","_getOptionProps","selected","targetSelected","selectedNodes","map","entity","get","filter","setUncontrolledState","eventObj","nativeEvent","onNodeCheck","checked","_this$$data3","oriCheckedKeys","oriHalfCheckedKeys","_getOptionProps2","checkedObj","halfChecked","checkedNodes","_conductCheck","checkedNodesPositions","push","onNodeLoad","_this2","Promise","resolve","_ref","_ref$_loadedKeys","_ref$_loadingKeys","loadingKeys","_getOptionProps3","promise","then","_this2$$data","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this3","_getOptionProps4","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","preventDefault","replace","registerTreeNode","isKeyChecked","_this$$data$_checkedK","renderTreeNode","child","level","_this$$data4","_this$$data4$_expande","_this$$data4$_selecte","_this$$data4$_halfChe","_this$$data4$_loadedK","_this$$data4$_loading","dragOverNodeKey","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","render","_this4","_this$$props","_this$$props$tabindex","domProps","$attrs","_this$$attrs","className","class","style","concat"],"sources":["/Users/lyonxie/Desktop/Frontend/node_modules/ant-design-vue/es/vc-tree/src/Tree.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes, { withUndefined } from '../../_util/vue-types';\nimport classNames from '../../_util/classNames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlot } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode, getDataAndAria } from './util';\nimport { defineComponent } from 'vue';\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = {\n      handler: function handler() {\n        this.needSyncKeys[k] = true;\n      },\n      flush: 'sync'\n    };\n  });\n  return watch;\n}\n\nvar Tree = defineComponent({\n  name: 'Tree',\n  mixins: [BaseMixin],\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n  inheritAttrs: false,\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array,\n    showLine: PropTypes.looseBool,\n    showIcon: PropTypes.looseBool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.looseBool,\n    selectable: PropTypes.looseBool,\n    disabled: PropTypes.looseBool,\n    multiple: PropTypes.looseBool,\n    checkable: withUndefined(PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool])),\n    checkStrictly: PropTypes.looseBool,\n    draggable: PropTypes.looseBool,\n    defaultExpandParent: PropTypes.looseBool,\n    autoExpandParent: PropTypes.looseBool,\n    defaultExpandAll: PropTypes.looseBool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    __propsSymbol__: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends(_extends({}, state), this.getDerivedState(getOptionProps(this), state));\n  },\n  watch: _extends(_extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys'])), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      } // ================== Tree Node ==================\n\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n\n      if (treeNode) {\n        newState._treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState._keyEntities || prevState._keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = _toConsumableArray(keyEntities.keys());\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n      var children = getSlot(node);\n      this.dragNode = node;\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n\n      this.__emit('dragstart', {\n        event: event,\n        node: node\n      });\n    },\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n          eventKey = node.eventKey;\n      if (!this.dragNode || !node.selectHandle) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n\n          _this.__emit('dragenter', {\n            event: event,\n            node: node,\n            expandedKeys: newExpandedKeys\n          });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _this$$data = this.$data,\n          _dragOverNodeKey = _this$$data._dragOverNodeKey,\n          _dropPosition = _this$$data._dropPosition; // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _dropPosition) return;\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n\n      this.__emit('dragover', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      this.__emit('dragleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      this.__emit('dragend', {\n        event: event,\n        node: node\n      });\n\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _this$$data2 = this.$data,\n          _this$$data2$_dragNod = _this$$data2._dragNodesKeys,\n          _dragNodesKeys = _this$$data2$_dragNod === void 0 ? [] : _this$$data2$_dragNod,\n          _dropPosition = _this$$data2._dropPosition;\n\n      var eventKey = node.eventKey,\n          pos = node.pos;\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      this.__emit('drop', dropResult);\n\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n\n      var _getOptionProps = getOptionProps(treeNode),\n          selected = _getOptionProps.selected,\n          eventKey = _getOptionProps.eventKey;\n\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      this.setUncontrolledState({\n        _selectedKeys: selectedKeys\n      });\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _this$$data3 = this.$data,\n          keyEntities = _this$$data3._keyEntities,\n          oriCheckedKeys = _this$$data3._checkedKeys,\n          oriHalfCheckedKeys = _this$$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n\n      var _getOptionProps2 = getOptionProps(treeNode),\n          eventKey = _getOptionProps2.eventKey; // Prepare trigger arguments\n\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        this.setUncontrolledState({\n          _checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n              loadedKeys = _ref$_loadedKeys === void 0 ? [] : _ref$_loadedKeys,\n              _ref$_loadingKeys = _ref._loadingKeys,\n              loadingKeys = _ref$_loadingKeys === void 0 ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n\n          var _getOptionProps3 = getOptionProps(treeNode),\n              eventKey = _getOptionProps3.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this2$$data = _this2.$data,\n                currentLoadedKeys = _this2$$data._loadedKeys,\n                currentLoadingKeys = _this2$$data._loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n\n      var _getOptionProps4 = getOptionProps(treeNode),\n          eventKey = _getOptionProps4.eventKey,\n          expanded = _getOptionProps4.expanded; // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      }); // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({\n            _expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n\n      this.__emit('rightClick', {\n        event: event,\n        node: node\n      });\n    },\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _this$$data$_checkedK = this.$data._checkedKeys,\n          checkedKeys = _this$$data$_checkedK === void 0 ? [] : _this$$data$_checkedK;\n      return checkedKeys.indexOf(key) !== -1;\n    },\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$$data4 = this.$data,\n          keyEntities = _this$$data4._keyEntities,\n          _this$$data4$_expande = _this$$data4._expandedKeys,\n          expandedKeys = _this$$data4$_expande === void 0 ? [] : _this$$data4$_expande,\n          _this$$data4$_selecte = _this$$data4._selectedKeys,\n          selectedKeys = _this$$data4$_selecte === void 0 ? [] : _this$$data4$_selecte,\n          _this$$data4$_halfChe = _this$$data4._halfCheckedKeys,\n          halfCheckedKeys = _this$$data4$_halfChe === void 0 ? [] : _this$$data4$_halfChe,\n          _this$$data4$_loadedK = _this$$data4._loadedKeys,\n          loadedKeys = _this$$data4$_loadedK === void 0 ? [] : _this$$data4$_loadedK,\n          _this$$data4$_loading = _this$$data4._loadingKeys,\n          loadingKeys = _this$$data4$_loading === void 0 ? [] : _this$$data4$_loading,\n          dragOverNodeKey = _this$$data4._dragOverNodeKey,\n          dropPosition = _this$$data4._dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key;\n\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return cloneElement(child, {\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1,\n        key: key\n      });\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n\n    var treeNode = this.$data._treeNode;\n    var _this$$props = this.$props,\n        prefixCls = _this$$props.prefixCls,\n        focusable = _this$$props.focusable,\n        showLine = _this$$props.showLine,\n        _this$$props$tabindex = _this$$props.tabindex,\n        tabindex = _this$$props$tabindex === void 0 ? 0 : _this$$props$tabindex;\n    var domProps = getDataAndAria(_extends(_extends({}, this.$props), this.$attrs));\n    var _this$$attrs = this.$attrs,\n        className = _this$$attrs.class,\n        style = _this$$attrs.style;\n    return _createVNode(\"ul\", _objectSpread(_objectSpread({}, domProps), {}, {\n      \"class\": classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\n      \"style\": style,\n      \"role\": \"tree\",\n      \"unselectable\": \"on\",\n      \"tabindex\": focusable ? tabindex : null\n    }), [mapChildren(treeNode, function (node, index) {\n      return _this4.renderTreeNode(node, index);\n    })]);\n  }\n});\nexport { Tree };\nexport default Tree;"],"mappings":";AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,OAAOC,SAAS,IAAIC,aAAa,QAAQ,uBAAuB;AAChE,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,OAAO,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,QAAQ,wBAAwB;AAC3F,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,qBAAqB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,QAAQ;AAClQ,SAASC,eAAe,QAAQ,KAAK;AACrC;AACA;AACA;AACA;;AAEA,SAASC,QAAQA,CAAA,EAAG;EAClB,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACjF,IAAIG,KAAK,GAAG,CAAC,CAAC;EACdJ,IAAI,CAACK,OAAO,CAAC,UAAUC,CAAC,EAAE;IACxBF,KAAK,CAACE,CAAC,CAAC,GAAG;MACTC,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;QAC1B,IAAI,CAACC,YAAY,CAACF,CAAC,CAAC,GAAG,IAAI;MAC7B,CAAC;MACDG,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC;EACF,OAAOL,KAAK;AACd;AAEA,IAAIM,IAAI,GAAGZ,eAAe,CAAC;EACzBa,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,CAAC9B,SAAS,CAAC;EACnB+B,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;IAC1B,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAEtC,gBAAgB,CAAC;IACtBuC,SAAS,EAAE5C,SAAS,CAAC6C,MAAM;IAC3BC,QAAQ,EAAE9C,SAAS,CAAC+C,SAAS,CAAC,CAAC/C,SAAS,CAAC6C,MAAM,EAAE7C,SAAS,CAACgD,MAAM,CAAC,CAAC;IACnEC,QAAQ,EAAEjD,SAAS,CAACkD,GAAG;IACvBC,QAAQ,EAAEnD,SAAS,CAACoD,KAAK;IACzBC,QAAQ,EAAErD,SAAS,CAACsD,SAAS;IAC7BC,QAAQ,EAAEvD,SAAS,CAACsD,SAAS;IAC7BE,IAAI,EAAExD,SAAS,CAAC+C,SAAS,CAAC,CAAC/C,SAAS,CAACyD,MAAM,EAAEzD,SAAS,CAAC0D,IAAI,CAAC,CAAC;IAC7DC,SAAS,EAAE3D,SAAS,CAACsD,SAAS;IAC9BM,UAAU,EAAE5D,SAAS,CAACsD,SAAS;IAC/BO,QAAQ,EAAE7D,SAAS,CAACsD,SAAS;IAC7BQ,QAAQ,EAAE9D,SAAS,CAACsD,SAAS;IAC7BS,SAAS,EAAE9D,aAAa,CAACD,SAAS,CAAC+C,SAAS,CAAC,CAAC/C,SAAS,CAACyD,MAAM,EAAEzD,SAAS,CAACsD,SAAS,CAAC,CAAC,CAAC;IACtFU,aAAa,EAAEhE,SAAS,CAACsD,SAAS;IAClCW,SAAS,EAAEjE,SAAS,CAACsD,SAAS;IAC9BY,mBAAmB,EAAElE,SAAS,CAACsD,SAAS;IACxCa,gBAAgB,EAAEnE,SAAS,CAACsD,SAAS;IACrCc,gBAAgB,EAAEpE,SAAS,CAACsD,SAAS;IACrCe,mBAAmB,EAAErE,SAAS,CAACoD,KAAK;IACpCkB,YAAY,EAAEtE,SAAS,CAACoD,KAAK;IAC7BmB,kBAAkB,EAAEvE,SAAS,CAACoD,KAAK;IACnCoB,WAAW,EAAExE,SAAS,CAAC+C,SAAS,CAAC,CAAC/C,SAAS,CAACoD,KAAK,EAAEpD,SAAS,CAACyD,MAAM,CAAC,CAAC;IACrEgB,mBAAmB,EAAEzE,SAAS,CAACoD,KAAK;IACpCsB,YAAY,EAAE1E,SAAS,CAACoD,KAAK;IAC7B;IACA;IACA;IACA;IACA;IACAuB,QAAQ,EAAE3E,SAAS,CAAC0D,IAAI;IACxBkB,UAAU,EAAE5E,SAAS,CAACoD,KAAK;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAyB,cAAc,EAAE7E,SAAS,CAAC0D,IAAI;IAC9BoB,kBAAkB,EAAE9E,SAAS,CAAC6C,MAAM;IACpCkC,aAAa,EAAE/E,SAAS,CAAC+C,SAAS,CAAC,CAAC/C,SAAS,CAAC6C,MAAM,EAAE7C,SAAS,CAACyD,MAAM,CAAC,CAAC;IACxEuB,YAAY,EAAEhF,SAAS,CAACkD,GAAG;IAC3B+B,eAAe,EAAEjF,SAAS,CAACkD;EAC7B,CAAC,EAAE;IACDN,SAAS,EAAE,SAAS;IACpBS,QAAQ,EAAE,KAAK;IACfE,QAAQ,EAAE,IAAI;IACdK,UAAU,EAAE,IAAI;IAChBE,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE,KAAK;IAChBF,QAAQ,EAAE,KAAK;IACfG,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE,KAAK;IAChBC,mBAAmB,EAAE,IAAI;IACzBC,gBAAgB,EAAE,KAAK;IACvBC,gBAAgB,EAAE,KAAK;IACvBC,mBAAmB,EAAE,EAAE;IACvBE,kBAAkB,EAAE,EAAE;IACtBE,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACFS,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;IACpB/E,OAAO,CAAC,IAAI,CAACgF,MAAM,CAACF,eAAe,EAAE,2BAA2B,CAAC;IACjE9E,OAAO,CAAC,IAAI,CAACgF,MAAM,CAAClC,QAAQ,EAAE,gDAAgD,CAAC;IAC/E,IAAI,CAACd,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACiD,YAAY,GAAG,CAAC,CAAC;IACtB,IAAIC,KAAK,GAAG;MACVC,YAAY,EAAE,IAAIC,GAAG,CAAC,CAAC;MACvBC,YAAY,EAAE,IAAID,GAAG,CAAC,CAAC;MACvBE,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,IAAI;MAChBC,gBAAgB,EAAE,EAAE;MACpBC,aAAa,EAAE,IAAI;MACnBC,cAAc,EAAE;IAClB,CAAC;IACD,OAAOtG,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEwF,KAAK,CAAC,EAAE,IAAI,CAACe,eAAe,CAAC9F,cAAc,CAAC,IAAI,CAAC,EAAE+E,KAAK,CAAC,CAAC;EACzF,CAAC;EACDtD,KAAK,EAAElC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6B,QAAQ,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE;IACjJuD,eAAe,EAAE,SAASA,eAAeA,CAAA,EAAG;MAC1C,IAAI,CAACoB,QAAQ,CAAC,IAAI,CAACD,eAAe,CAAC9F,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAACgG,KAAK,CAAC,CAAC;MACrE,IAAI,CAACnE,YAAY,GAAG,CAAC,CAAC;IACxB;EACF,CAAC,CAAC;EACFoE,OAAO,EAAE;IACPH,eAAe,EAAE,SAASA,eAAeA,CAACzD,KAAK,EAAE6D,SAAS,EAAE;MAC1D,IAAIR,UAAU,GAAGQ,SAAS,CAACR,UAAU;MACrC,IAAIS,QAAQ,GAAG;QACbT,UAAU,EAAEnG,QAAQ,CAAC,CAAC,CAAC,EAAE8C,KAAK;MAChC,CAAC;MACD,IAAI+D,IAAI,GAAG,IAAI;MAEf,SAASC,QAAQA,CAACrE,IAAI,EAAE;QACtB,OAAO,CAAC0D,UAAU,IAAI1D,IAAI,IAAIK,KAAK,IAAIqD,UAAU,IAAIU,IAAI,CAACvE,YAAY,CAACG,IAAI,CAAC;MAC9E,CAAC,CAAC;;MAGF,IAAIsE,QAAQ,GAAG,IAAI,CAAC,CAAC;;MAErB,IAAID,QAAQ,CAAC,UAAU,CAAC,EAAE;QACxBC,QAAQ,GAAGjG,iBAAiB,CAACgC,KAAK,CAACQ,QAAQ,CAAC;MAC9C,CAAC,MAAM,IAAIwD,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC/BC,QAAQ,GAAGjE,KAAK,CAACM,QAAQ;MAC3B,CAAC,CAAC;MACF;;MAGA,IAAI2D,QAAQ,EAAE;QACZH,QAAQ,CAACV,SAAS,GAAGa,QAAQ,CAAC,CAAC;;QAE/B,IAAIC,WAAW,GAAGnG,qBAAqB,CAACkG,QAAQ,CAAC;QACjDH,QAAQ,CAACjB,YAAY,GAAGqB,WAAW,CAACC,WAAW;MACjD;MAEA,IAAIA,WAAW,GAAGL,QAAQ,CAACjB,YAAY,IAAIgB,SAAS,CAAChB,YAAY,CAAC,CAAC;;MAEnE,IAAImB,QAAQ,CAAC,cAAc,CAAC,IAAIX,UAAU,IAAIW,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC1EF,QAAQ,CAAChB,aAAa,GAAG9C,KAAK,CAACwB,gBAAgB,IAAI,CAAC6B,UAAU,IAAIrD,KAAK,CAACuB,mBAAmB,GAAGnD,mBAAmB,CAAC4B,KAAK,CAAC2B,YAAY,EAAEwC,WAAW,CAAC,GAAGnE,KAAK,CAAC2B,YAAY;MACzK,CAAC,MAAM,IAAI,CAAC0B,UAAU,IAAIrD,KAAK,CAACyB,gBAAgB,EAAE;QAChDqC,QAAQ,CAAChB,aAAa,GAAG7F,kBAAkB,CAACkH,WAAW,CAACnF,IAAI,CAAC,CAAC,CAAC;MACjE,CAAC,MAAM,IAAI,CAACqE,UAAU,IAAIrD,KAAK,CAAC0B,mBAAmB,EAAE;QACnDoC,QAAQ,CAAChB,aAAa,GAAG9C,KAAK,CAACwB,gBAAgB,IAAIxB,KAAK,CAACuB,mBAAmB,GAAGnD,mBAAmB,CAAC4B,KAAK,CAAC0B,mBAAmB,EAAEyC,WAAW,CAAC,GAAGnE,KAAK,CAAC0B,mBAAmB;MACxK,CAAC,CAAC;;MAGF,IAAI1B,KAAK,CAACiB,UAAU,EAAE;QACpB,IAAI+C,QAAQ,CAAC,cAAc,CAAC,EAAE;UAC5BF,QAAQ,CAACf,aAAa,GAAG1E,gBAAgB,CAAC2B,KAAK,CAAC+B,YAAY,EAAE/B,KAAK,CAAC;QACtE,CAAC,MAAM,IAAI,CAACqD,UAAU,IAAIrD,KAAK,CAAC8B,mBAAmB,EAAE;UACnDgC,QAAQ,CAACf,aAAa,GAAG1E,gBAAgB,CAAC2B,KAAK,CAAC8B,mBAAmB,EAAE9B,KAAK,CAAC;QAC7E;MACF,CAAC,CAAC;;MAGF,IAAIA,KAAK,CAACoB,SAAS,EAAE;QACnB,IAAIgD,gBAAgB;QAEpB,IAAIJ,QAAQ,CAAC,aAAa,CAAC,EAAE;UAC3BI,gBAAgB,GAAGjG,gBAAgB,CAAC6B,KAAK,CAAC6B,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,MAAM,IAAI,CAACwB,UAAU,IAAIrD,KAAK,CAAC4B,kBAAkB,EAAE;UAClDwC,gBAAgB,GAAGjG,gBAAgB,CAAC6B,KAAK,CAAC4B,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC,MAAM,IAAIqC,QAAQ,EAAE;UACnB;UACAG,gBAAgB,GAAGjG,gBAAgB,CAAC6B,KAAK,CAAC6B,WAAW,CAAC,IAAI;YACxDA,WAAW,EAAEgC,SAAS,CAACb,YAAY;YACnCqB,eAAe,EAAER,SAAS,CAACZ;UAC7B,CAAC;QACH;QAEA,IAAImB,gBAAgB,EAAE;UACpB,IAAIE,iBAAiB,GAAGF,gBAAgB;YACpCG,qBAAqB,GAAGD,iBAAiB,CAACzC,WAAW;YACrDA,WAAW,GAAG0C,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;YAC3EC,qBAAqB,GAAGF,iBAAiB,CAACD,eAAe;YACzDA,eAAe,GAAGG,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;UAEnF,IAAI,CAACxE,KAAK,CAACqB,aAAa,EAAE;YACxB,IAAIoD,WAAW,GAAG9F,YAAY,CAACkD,WAAW,EAAE,IAAI,EAAEsC,WAAW,CAAC;YAC9DtC,WAAW,GAAG4C,WAAW,CAAC5C,WAAW;YACrCwC,eAAe,GAAGI,WAAW,CAACJ,eAAe;UAC/C;UAEAP,QAAQ,CAACd,YAAY,GAAGnB,WAAW;UACnCiC,QAAQ,CAACb,gBAAgB,GAAGoB,eAAe;QAC7C;MACF,CAAC,CAAC;;MAGF,IAAIL,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC1BF,QAAQ,CAACZ,WAAW,GAAGlD,KAAK,CAACiC,UAAU;MACzC;MAEA,OAAO6B,QAAQ;IACjB,CAAC;IACDY,eAAe,EAAE,SAASA,eAAeA,CAACC,KAAK,EAAEC,IAAI,EAAE;MACrD,IAAI9B,aAAa,GAAG,IAAI,CAACa,KAAK,CAACb,aAAa;MAC5C,IAAI+B,QAAQ,GAAGD,IAAI,CAACC,QAAQ;MAC5B,IAAIvE,QAAQ,GAAG1C,OAAO,CAACgH,IAAI,CAAC;MAC5B,IAAI,CAACE,QAAQ,GAAGF,IAAI;MACpB,IAAI,CAAClB,QAAQ,CAAC;QACZF,cAAc,EAAEtF,gBAAgB,CAAC,OAAOoC,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAAC,CAAC,GAAGA,QAAQ,EAAEsE,IAAI,CAAC;QAC9F9B,aAAa,EAAEtE,MAAM,CAACsE,aAAa,EAAE+B,QAAQ;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACE,MAAM,CAAC,WAAW,EAAE;QACvBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IACII,eAAe,EAAE,SAASA,eAAeA,CAACL,KAAK,EAAEC,IAAI,EAAE;MACrD,IAAIK,KAAK,GAAG,IAAI;MAEhB,IAAItD,YAAY,GAAG,IAAI,CAACgC,KAAK,CAACb,aAAa;MAC3C,IAAIoC,GAAG,GAAGN,IAAI,CAACM,GAAG;QACdL,QAAQ,GAAGD,IAAI,CAACC,QAAQ;MAC5B,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAACF,IAAI,CAACO,YAAY,EAAE;MAC1C,IAAIC,YAAY,GAAG9G,gBAAgB,CAACqG,KAAK,EAAEC,IAAI,CAAC,CAAC,CAAC;;MAElD,IAAI,IAAI,CAACE,QAAQ,CAACD,QAAQ,KAAKA,QAAQ,IAAIO,YAAY,KAAK,CAAC,EAAE;QAC7D,IAAI,CAAC1B,QAAQ,CAAC;UACZJ,gBAAgB,EAAE,EAAE;UACpBC,aAAa,EAAE;QACjB,CAAC,CAAC;QACF;MACF,CAAC,CAAC;MACF;MACA;MACA;MACA;;MAGA8B,UAAU,CAAC,YAAY;QACrB;QACAJ,KAAK,CAACvB,QAAQ,CAAC;UACbJ,gBAAgB,EAAEuB,QAAQ;UAC1BtB,aAAa,EAAE6B;QACjB,CAAC,CAAC,CAAC,CAAC;;QAGJ,IAAI,CAACH,KAAK,CAACK,qBAAqB,EAAE;UAChCL,KAAK,CAACK,qBAAqB,GAAG,CAAC,CAAC;QAClC;QAEAC,MAAM,CAACvG,IAAI,CAACiG,KAAK,CAACK,qBAAqB,CAAC,CAACjG,OAAO,CAAC,UAAUmG,GAAG,EAAE;UAC9DC,YAAY,CAACR,KAAK,CAACK,qBAAqB,CAACE,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC;QACFP,KAAK,CAACK,qBAAqB,CAACJ,GAAG,CAAC,GAAGG,UAAU,CAAC,YAAY;UACxD,IAAIK,eAAe,GAAGnH,MAAM,CAACoD,YAAY,EAAEkD,QAAQ,CAAC;UAEpD,IAAI,CAACpH,OAAO,CAACwH,KAAK,EAAE,cAAc,CAAC,EAAE;YACnCA,KAAK,CAACvB,QAAQ,CAAC;cACbZ,aAAa,EAAE4C;YACjB,CAAC,CAAC;UACJ;UAEAT,KAAK,CAACF,MAAM,CAAC,WAAW,EAAE;YACxBJ,KAAK,EAAEA,KAAK;YACZC,IAAI,EAAEA,IAAI;YACVjD,YAAY,EAAE+D;UAChB,CAAC,CAAC;QACJ,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IACDC,cAAc,EAAE,SAASA,cAAcA,CAAChB,KAAK,EAAEC,IAAI,EAAE;MACnD,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;MAC5B,IAAIe,WAAW,GAAG,IAAI,CAACjC,KAAK;QACxBL,gBAAgB,GAAGsC,WAAW,CAACtC,gBAAgB;QAC/CC,aAAa,GAAGqC,WAAW,CAACrC,aAAa,CAAC,CAAC;;MAE/C,IAAI,IAAI,CAACuB,QAAQ,IAAID,QAAQ,KAAKvB,gBAAgB,IAAIsB,IAAI,CAACO,YAAY,EAAE;QACvE,IAAIC,YAAY,GAAG9G,gBAAgB,CAACqG,KAAK,EAAEC,IAAI,CAAC;QAChD,IAAIQ,YAAY,KAAK7B,aAAa,EAAE;QACpC,IAAI,CAACG,QAAQ,CAAC;UACZH,aAAa,EAAE6B;QACjB,CAAC,CAAC;MACJ;MAEA,IAAI,CAACL,MAAM,CAAC,UAAU,EAAE;QACtBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IACDiB,eAAe,EAAE,SAASA,eAAeA,CAAClB,KAAK,EAAEC,IAAI,EAAE;MACrD,IAAI,CAAClB,QAAQ,CAAC;QACZJ,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,IAAI,CAACyB,MAAM,CAAC,WAAW,EAAE;QACvBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IACDkB,aAAa,EAAE,SAASA,aAAaA,CAACnB,KAAK,EAAEC,IAAI,EAAE;MACjD,IAAI,CAAClB,QAAQ,CAAC;QACZJ,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,IAAI,CAACyB,MAAM,CAAC,SAAS,EAAE;QACrBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,GAAG,IAAI;IACtB,CAAC;IACDiB,UAAU,EAAE,SAASA,UAAUA,CAACpB,KAAK,EAAEC,IAAI,EAAE;MAC3C,IAAIoB,YAAY,GAAG,IAAI,CAACrC,KAAK;QACzBsC,qBAAqB,GAAGD,YAAY,CAACxC,cAAc;QACnDA,cAAc,GAAGyC,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC9E1C,aAAa,GAAGyC,YAAY,CAACzC,aAAa;MAE9C,IAAIsB,QAAQ,GAAGD,IAAI,CAACC,QAAQ;QACxBK,GAAG,GAAGN,IAAI,CAACM,GAAG;MAClB,IAAI,CAACxB,QAAQ,CAAC;QACZJ,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,IAAIE,cAAc,CAAC0C,OAAO,CAACrB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3CrH,OAAO,CAAC,KAAK,EAAE,sDAAsD,CAAC;QACtE;MACF;MAEA,IAAI2I,MAAM,GAAG1H,QAAQ,CAACyG,GAAG,CAAC;MAC1B,IAAIkB,UAAU,GAAG;QACfzB,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA,IAAI;QACVE,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBuB,aAAa,EAAE7C,cAAc,CAAC8C,KAAK,CAAC,CAAC;QACrClB,YAAY,EAAE7B,aAAa,GAAGgD,MAAM,CAACJ,MAAM,CAACA,MAAM,CAACjH,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/DsH,SAAS,EAAE;MACb,CAAC;MAED,IAAIjD,aAAa,KAAK,CAAC,EAAE;QACvB6C,UAAU,CAACI,SAAS,GAAG,IAAI;MAC7B;MAEA,IAAI,CAACzB,MAAM,CAAC,MAAM,EAAEqB,UAAU,CAAC;MAE/B,IAAI,CAACtB,QAAQ,GAAG,IAAI;IACtB,CAAC;IACD2B,WAAW,EAAE,SAASA,WAAWA,CAACC,CAAC,EAAEzC,QAAQ,EAAE;MAC7C,IAAI,CAACc,MAAM,CAAC,OAAO,EAAE2B,CAAC,EAAEzC,QAAQ,CAAC;IACnC,CAAC;IACD0C,iBAAiB,EAAE,SAASA,iBAAiBA,CAACD,CAAC,EAAEzC,QAAQ,EAAE;MACzD,IAAI,CAACc,MAAM,CAAC,UAAU,EAAE2B,CAAC,EAAEzC,QAAQ,CAAC;IACtC,CAAC;IACD2C,YAAY,EAAE,SAASA,YAAYA,CAACF,CAAC,EAAEzC,QAAQ,EAAE;MAC/C,IAAIlC,YAAY,GAAG,IAAI,CAAC4B,KAAK,CAACZ,aAAa;MAC3C,IAAIoB,WAAW,GAAG,IAAI,CAACR,KAAK,CAACd,YAAY;MACzC,IAAI1B,QAAQ,GAAG,IAAI,CAACqB,MAAM,CAACrB,QAAQ;MAEnC,IAAI0F,eAAe,GAAGlJ,cAAc,CAACsG,QAAQ,CAAC;QAC1C6C,QAAQ,GAAGD,eAAe,CAACC,QAAQ;QACnCjC,QAAQ,GAAGgC,eAAe,CAAChC,QAAQ;MAEvC,IAAIkC,cAAc,GAAG,CAACD,QAAQ,CAAC,CAAC;;MAEhC,IAAI,CAACC,cAAc,EAAE;QACnBhF,YAAY,GAAGvD,MAAM,CAACuD,YAAY,EAAE8C,QAAQ,CAAC;MAC/C,CAAC,MAAM,IAAI,CAAC1D,QAAQ,EAAE;QACpBY,YAAY,GAAG,CAAC8C,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACL9C,YAAY,GAAGxD,MAAM,CAACwD,YAAY,EAAE8C,QAAQ,CAAC;MAC/C,CAAC,CAAC;;MAGF,IAAImC,aAAa,GAAGjF,YAAY,CAACkF,GAAG,CAAC,UAAUzB,GAAG,EAAE;QAClD,IAAI0B,MAAM,GAAG/C,WAAW,CAACgD,GAAG,CAAC3B,GAAG,CAAC;QACjC,IAAI,CAAC0B,MAAM,EAAE,OAAO,IAAI;QACxB,OAAOA,MAAM,CAACtC,IAAI;MACpB,CAAC,CAAC,CAACwC,MAAM,CAAC,UAAUxC,IAAI,EAAE;QACxB,OAAOA,IAAI;MACb,CAAC,CAAC;MACF,IAAI,CAACyC,oBAAoB,CAAC;QACxBtE,aAAa,EAAEhB;MACjB,CAAC,CAAC;MACF,IAAIuF,QAAQ,GAAG;QACb3C,KAAK,EAAE,QAAQ;QACfmC,QAAQ,EAAEC,cAAc;QACxBnC,IAAI,EAAEX,QAAQ;QACd+C,aAAa,EAAEA,aAAa;QAC5BO,WAAW,EAAEb;MACf,CAAC;MAED,IAAI,CAAC3B,MAAM,CAAC,QAAQ,EAAEhD,YAAY,EAAEuF,QAAQ,CAAC;IAC/C,CAAC;IACDE,WAAW,EAAE,SAASA,WAAWA,CAACd,CAAC,EAAEzC,QAAQ,EAAEwD,OAAO,EAAE;MACtD,IAAIC,YAAY,GAAG,IAAI,CAAC/D,KAAK;QACzBQ,WAAW,GAAGuD,YAAY,CAAC7E,YAAY;QACvC8E,cAAc,GAAGD,YAAY,CAAC1E,YAAY;QAC1C4E,kBAAkB,GAAGF,YAAY,CAACzE,gBAAgB;MACtD,IAAI5B,aAAa,GAAG,IAAI,CAACmB,MAAM,CAACnB,aAAa;MAE7C,IAAIwG,gBAAgB,GAAGlK,cAAc,CAACsG,QAAQ,CAAC;QAC3CY,QAAQ,GAAGgD,gBAAgB,CAAChD,QAAQ,CAAC,CAAC;;MAG1C,IAAIiD,UAAU;MACd,IAAIR,QAAQ,GAAG;QACb3C,KAAK,EAAE,OAAO;QACdC,IAAI,EAAEX,QAAQ;QACdwD,OAAO,EAAEA,OAAO;QAChBF,WAAW,EAAEb;MACf,CAAC;MAED,IAAIrF,aAAa,EAAE;QACjB,IAAIQ,WAAW,GAAG4F,OAAO,GAAGlJ,MAAM,CAACoJ,cAAc,EAAE9C,QAAQ,CAAC,GAAGrG,MAAM,CAACmJ,cAAc,EAAE9C,QAAQ,CAAC;QAC/F,IAAIR,eAAe,GAAG7F,MAAM,CAACoJ,kBAAkB,EAAE/C,QAAQ,CAAC;QAC1DiD,UAAU,GAAG;UACXL,OAAO,EAAE5F,WAAW;UACpBkG,WAAW,EAAE1D;QACf,CAAC;QACDiD,QAAQ,CAACU,YAAY,GAAGnG,WAAW,CAACoF,GAAG,CAAC,UAAUzB,GAAG,EAAE;UACrD,OAAOrB,WAAW,CAACgD,GAAG,CAAC3B,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC4B,MAAM,CAAC,UAAUF,MAAM,EAAE;UAC1B,OAAOA,MAAM;QACf,CAAC,CAAC,CAACD,GAAG,CAAC,UAAUC,MAAM,EAAE;UACvB,OAAOA,MAAM,CAACtC,IAAI;QACpB,CAAC,CAAC;QACF,IAAI,CAACyC,oBAAoB,CAAC;UACxBrE,YAAY,EAAEnB;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAIoG,aAAa,GAAGtJ,YAAY,CAAC,CAACkG,QAAQ,CAAC,EAAE4C,OAAO,EAAEtD,WAAW,EAAE;YACjEtC,WAAW,EAAE8F,cAAc;YAC3BtD,eAAe,EAAEuD;UACnB,CAAC,CAAC;UACE5E,YAAY,GAAGiF,aAAa,CAACpG,WAAW;UACxCoB,gBAAgB,GAAGgF,aAAa,CAAC5D,eAAe;QAEpDyD,UAAU,GAAG9E,YAAY,CAAC,CAAC;;QAE3BsE,QAAQ,CAACU,YAAY,GAAG,EAAE;QAC1BV,QAAQ,CAACY,qBAAqB,GAAG,EAAE;QACnCZ,QAAQ,CAACjD,eAAe,GAAGpB,gBAAgB;QAE3CD,YAAY,CAAC3D,OAAO,CAAC,UAAUmG,GAAG,EAAE;UAClC,IAAI0B,MAAM,GAAG/C,WAAW,CAACgD,GAAG,CAAC3B,GAAG,CAAC;UACjC,IAAI,CAAC0B,MAAM,EAAE;UACb,IAAItC,IAAI,GAAGsC,MAAM,CAACtC,IAAI;YAClBM,GAAG,GAAGgC,MAAM,CAAChC,GAAG;UACpBoC,QAAQ,CAACU,YAAY,CAACG,IAAI,CAACvD,IAAI,CAAC;UAChC0C,QAAQ,CAACY,qBAAqB,CAACC,IAAI,CAAC;YAClCvD,IAAI,EAAEA,IAAI;YACVM,GAAG,EAAEA;UACP,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAACmC,oBAAoB,CAAC;UACxBrE,YAAY,EAAEA,YAAY;UAC1BC,gBAAgB,EAAEA;QACpB,CAAC,CAAC;MACJ;MAEA,IAAI,CAAC8B,MAAM,CAAC,OAAO,EAAE+C,UAAU,EAAER,QAAQ,CAAC;IAC5C,CAAC;IACDc,UAAU,EAAE,SAASA,UAAUA,CAACnE,QAAQ,EAAE;MACxC,IAAIoE,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;QACpC;QACAF,MAAM,CAAC3E,QAAQ,CAAC,UAAU8E,IAAI,EAAE;UAC9B,IAAIC,gBAAgB,GAAGD,IAAI,CAACtF,WAAW;YACnCjB,UAAU,GAAGwG,gBAAgB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,gBAAgB;YAChEC,iBAAiB,GAAGF,IAAI,CAACrF,YAAY;YACrCwF,WAAW,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,iBAAiB;UACvE,IAAI1G,QAAQ,GAAGqG,MAAM,CAAC7F,MAAM,CAACR,QAAQ;UAErC,IAAI4G,gBAAgB,GAAGjL,cAAc,CAACsG,QAAQ,CAAC;YAC3CY,QAAQ,GAAG+D,gBAAgB,CAAC/D,QAAQ;UAExC,IAAI,CAAC7C,QAAQ,IAAIC,UAAU,CAACiE,OAAO,CAACrB,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI8D,WAAW,CAACzC,OAAO,CAACrB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC5F,OAAO,CAAC,CAAC;UACX,CAAC,CAAC;;UAGF,IAAIgE,OAAO,GAAG7G,QAAQ,CAACiC,QAAQ,CAAC;UAChC4E,OAAO,CAACC,IAAI,CAAC,YAAY;YACvB,IAAIC,YAAY,GAAGV,MAAM,CAAC1E,KAAK;cAC3BqF,iBAAiB,GAAGD,YAAY,CAAC7F,WAAW;cAC5C+F,kBAAkB,GAAGF,YAAY,CAAC5F,YAAY;YAClD,IAAI+F,aAAa,GAAG3K,MAAM,CAACyK,iBAAiB,EAAEnE,QAAQ,CAAC;YACvD,IAAIsE,cAAc,GAAG3K,MAAM,CAACyK,kBAAkB,EAAEpE,QAAQ,CAAC,CAAC,CAAC;YAC3D;;YAEAwD,MAAM,CAACtD,MAAM,CAAC,MAAM,EAAEmE,aAAa,EAAE;cACnCvE,KAAK,EAAE,MAAM;cACbC,IAAI,EAAEX;YACR,CAAC,CAAC;YAEFoE,MAAM,CAAChB,oBAAoB,CAAC;cAC1BnE,WAAW,EAAEgG;YACf,CAAC,CAAC;YAEFb,MAAM,CAAC3E,QAAQ,CAAC;cACdP,YAAY,EAAEgG;YAChB,CAAC,CAAC;YAEFZ,OAAO,CAAC,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACLpF,YAAY,EAAE5E,MAAM,CAACoK,WAAW,EAAE9D,QAAQ;UAC5C,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDuE,YAAY,EAAE,SAASA,YAAYA,CAAC1C,CAAC,EAAEzC,QAAQ,EAAE;MAC/C,IAAIoF,MAAM,GAAG,IAAI;MAEjB,IAAI1H,YAAY,GAAG,IAAI,CAACgC,KAAK,CAACb,aAAa;MAC3C,IAAId,QAAQ,GAAG,IAAI,CAACQ,MAAM,CAACR,QAAQ;MAEnC,IAAIsH,gBAAgB,GAAG3L,cAAc,CAACsG,QAAQ,CAAC;QAC3CY,QAAQ,GAAGyE,gBAAgB,CAACzE,QAAQ;QACpC0E,QAAQ,GAAGD,gBAAgB,CAACC,QAAQ,CAAC,CAAC;;MAG1C,IAAIC,KAAK,GAAG7H,YAAY,CAACuE,OAAO,CAACrB,QAAQ,CAAC;MAC1C,IAAI4E,cAAc,GAAG,CAACF,QAAQ;MAC9B/L,OAAO,CAAC+L,QAAQ,IAAIC,KAAK,KAAK,CAAC,CAAC,IAAI,CAACD,QAAQ,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE,wCAAwC,CAAC;MAExG,IAAIC,cAAc,EAAE;QAClB9H,YAAY,GAAGpD,MAAM,CAACoD,YAAY,EAAEkD,QAAQ,CAAC;MAC/C,CAAC,MAAM;QACLlD,YAAY,GAAGnD,MAAM,CAACmD,YAAY,EAAEkD,QAAQ,CAAC;MAC/C;MAEA,IAAI,CAACwC,oBAAoB,CAAC;QACxBvE,aAAa,EAAEnB;MACjB,CAAC,CAAC;MAEF,IAAI,CAACoD,MAAM,CAAC,QAAQ,EAAEpD,YAAY,EAAE;QAClCiD,IAAI,EAAEX,QAAQ;QACdsF,QAAQ,EAAEE,cAAc;QACxBlC,WAAW,EAAEb;MACf,CAAC,CAAC,CAAC,CAAC;;MAGJ,IAAI+C,cAAc,IAAIzH,QAAQ,EAAE;QAC9B,IAAI0H,WAAW,GAAG,IAAI,CAACtB,UAAU,CAACnE,QAAQ,CAAC;QAC3C,OAAOyF,WAAW,GAAGA,WAAW,CAACZ,IAAI,CAAC,YAAY;UAChD;UACAO,MAAM,CAAChC,oBAAoB,CAAC;YAC1BvE,aAAa,EAAEnB;UACjB,CAAC,CAAC;QACJ,CAAC,CAAC,GAAG,IAAI;MACX;MAEA,OAAO,IAAI;IACb,CAAC;IACDgI,gBAAgB,EAAE,SAASA,gBAAgBA,CAAChF,KAAK,EAAEC,IAAI,EAAE;MACvD,IAAI,CAACG,MAAM,CAAC,YAAY,EAAE;QACxBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IACDgF,gBAAgB,EAAE,SAASA,gBAAgBA,CAACjF,KAAK,EAAEC,IAAI,EAAE;MACvD,IAAI,CAACG,MAAM,CAAC,YAAY,EAAE;QACxBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IACDiF,iBAAiB,EAAE,SAASA,iBAAiBA,CAAClF,KAAK,EAAEC,IAAI,EAAE;MACzDD,KAAK,CAACmF,cAAc,CAAC,CAAC;MAEtB,IAAI,CAAC/E,MAAM,CAAC,YAAY,EAAE;QACxBJ,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC,CAAC;IACJ,CAAC;IAED;AACJ;AACA;IACIyC,oBAAoB,EAAE,SAASA,oBAAoBA,CAAC3E,KAAK,EAAE;MACzD,IAAIsB,QAAQ,GAAG,KAAK;MACpB,IAAIF,QAAQ,GAAG,CAAC,CAAC;MACjB,IAAI9D,KAAK,GAAGrC,cAAc,CAAC,IAAI,CAAC;MAChC4H,MAAM,CAACvG,IAAI,CAAC0D,KAAK,CAAC,CAACrD,OAAO,CAAC,UAAUM,IAAI,EAAE;QACzC,IAAIA,IAAI,CAACoK,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI/J,KAAK,EAAE;QACpCgE,QAAQ,GAAG,IAAI;QACfF,QAAQ,CAACnE,IAAI,CAAC,GAAG+C,KAAK,CAAC/C,IAAI,CAAC;MAC9B,CAAC,CAAC;MAEF,IAAIqE,QAAQ,EAAE;QACZ,IAAI,CAACN,QAAQ,CAACI,QAAQ,CAAC;MACzB;IACF,CAAC;IACDkG,gBAAgB,EAAE,SAASA,gBAAgBA,CAACxE,GAAG,EAAEZ,IAAI,EAAE;MACrD,IAAIA,IAAI,EAAE;QACR,IAAI,CAACnC,YAAY,CAAC+C,GAAG,CAAC,GAAGZ,IAAI;MAC/B,CAAC,MAAM;QACL,OAAO,IAAI,CAACnC,YAAY,CAAC+C,GAAG,CAAC;MAC/B;IACF,CAAC;IACDyE,YAAY,EAAE,SAASA,YAAYA,CAACzE,GAAG,EAAE;MACvC,IAAI0E,qBAAqB,GAAG,IAAI,CAACvG,KAAK,CAACX,YAAY;QAC/CnB,WAAW,GAAGqI,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;MAC/E,OAAOrI,WAAW,CAACqE,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED;AACJ;AACA;AACA;IACI2E,cAAc,EAAE,SAASA,cAAcA,CAACC,KAAK,EAAEZ,KAAK,EAAE;MACpD,IAAIa,KAAK,GAAGpL,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MACjF,IAAIqL,YAAY,GAAG,IAAI,CAAC3G,KAAK;QACzBQ,WAAW,GAAGmG,YAAY,CAACzH,YAAY;QACvC0H,qBAAqB,GAAGD,YAAY,CAACxH,aAAa;QAClDnB,YAAY,GAAG4I,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC5EC,qBAAqB,GAAGF,YAAY,CAACvH,aAAa;QAClDhB,YAAY,GAAGyI,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC5EC,qBAAqB,GAAGH,YAAY,CAACrH,gBAAgB;QACrDoB,eAAe,GAAGoG,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC/EC,qBAAqB,GAAGJ,YAAY,CAACpH,WAAW;QAChDjB,UAAU,GAAGyI,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC1EC,qBAAqB,GAAGL,YAAY,CAACnH,YAAY;QACjDwF,WAAW,GAAGgC,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;QAC3EC,eAAe,GAAGN,YAAY,CAAChH,gBAAgB;QAC/C8B,YAAY,GAAGkF,YAAY,CAAC/G,aAAa;MAC7C,IAAI2B,GAAG,GAAGjH,WAAW,CAACoM,KAAK,EAAEb,KAAK,CAAC;MACnC,IAAIhE,GAAG,GAAG4E,KAAK,CAAC5E,GAAG;MAEnB,IAAI,CAACA,GAAG,KAAKA,GAAG,KAAKrG,SAAS,IAAIqG,GAAG,KAAK,IAAI,CAAC,EAAE;QAC/CA,GAAG,GAAGN,GAAG;MACX;MAEA,IAAI,CAACf,WAAW,CAACgD,GAAG,CAAC3B,GAAG,CAAC,EAAE;QACzB5G,gBAAgB,CAAC,CAAC;QAClB,OAAO,IAAI;MACb;MAEA,OAAOf,YAAY,CAACuM,KAAK,EAAE;QACzBvF,QAAQ,EAAEW,GAAG;QACb+D,QAAQ,EAAE5H,YAAY,CAACuE,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1CsB,QAAQ,EAAE/E,YAAY,CAACmE,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1CqF,MAAM,EAAE5I,UAAU,CAACiE,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;QACtCsF,OAAO,EAAEnC,WAAW,CAACzC,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;QACxCiC,OAAO,EAAE,IAAI,CAACwC,YAAY,CAACzE,GAAG,CAAC;QAC/BuC,WAAW,EAAE1D,eAAe,CAAC6B,OAAO,CAACV,GAAG,CAAC,KAAK,CAAC,CAAC;QAChDN,GAAG,EAAEA,GAAG;QACR;QACA6F,QAAQ,EAAEH,eAAe,KAAKpF,GAAG,IAAIJ,YAAY,KAAK,CAAC;QACvD4F,cAAc,EAAEJ,eAAe,KAAKpF,GAAG,IAAIJ,YAAY,KAAK,CAAC,CAAC;QAC9D6F,iBAAiB,EAAEL,eAAe,KAAKpF,GAAG,IAAIJ,YAAY,KAAK,CAAC;QAChEI,GAAG,EAAEA;MACP,CAAC,CAAC;IACJ;EACF,CAAC;EACD0F,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;IACxB,IAAIC,MAAM,GAAG,IAAI;IAEjB,IAAIlH,QAAQ,GAAG,IAAI,CAACN,KAAK,CAACP,SAAS;IACnC,IAAIgI,YAAY,GAAG,IAAI,CAAC5I,MAAM;MAC1BvC,SAAS,GAAGmL,YAAY,CAACnL,SAAS;MAClCe,SAAS,GAAGoK,YAAY,CAACpK,SAAS;MAClCN,QAAQ,GAAG0K,YAAY,CAAC1K,QAAQ;MAChC2K,qBAAqB,GAAGD,YAAY,CAACjL,QAAQ;MAC7CA,QAAQ,GAAGkL,qBAAqB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,qBAAqB;IAC3E,IAAIC,QAAQ,GAAGzM,cAAc,CAAC3B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACsF,MAAM,CAAC,EAAE,IAAI,CAAC+I,MAAM,CAAC,CAAC;IAC/E,IAAIC,YAAY,GAAG,IAAI,CAACD,MAAM;MAC1BE,SAAS,GAAGD,YAAY,CAACE,KAAK;MAC9BC,KAAK,GAAGH,YAAY,CAACG,KAAK;IAC9B,OAAOvO,YAAY,CAAC,IAAI,EAAEL,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEuO,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE;MACvE,OAAO,EAAE/N,UAAU,CAAC0C,SAAS,EAAEwL,SAAS,EAAEzO,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC4O,MAAM,CAAC3L,SAAS,EAAE,YAAY,CAAC,EAAES,QAAQ,CAAC,CAAC;MAC5G,OAAO,EAAEiL,KAAK;MACd,MAAM,EAAE,MAAM;MACd,cAAc,EAAE,IAAI;MACpB,UAAU,EAAE3K,SAAS,GAAGb,QAAQ,GAAG;IACrC,CAAC,CAAC,EAAE,CAACzB,WAAW,CAACuF,QAAQ,EAAE,UAAUW,IAAI,EAAE4E,KAAK,EAAE;MAChD,OAAO2B,MAAM,CAAChB,cAAc,CAACvF,IAAI,EAAE4E,KAAK,CAAC;IAC3C,CAAC,CAAC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,SAAS9J,IAAI;AACb,eAAeA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}